---
title: "Data_Visualize CH1"
author: "Seongtaek"
date: "2023-03-29"
categories: [code, data_visualize, rstudio]
image: "ggplot.jpg"
---

<table align="bottom">
  <td>
    <a target="_blank" href="데이터시각화-ggplot2기초.html"><img
    src = r_logo.png />HTML파일로 보기</a>
  </td>
</table>

ggplot2 Basic

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = TRUE,
  comment = "#>",
  collapse = TRUE # Code와 Output을 분리시키지 않고 하나로 출력시켜 줌
  )
```

## 그래프 패키지(Packages)
##### [ggplot2] package : R에서 사용할 수 있는 대표적인 그래픽 도구
- 그래프 결과를 그림 파일로 출력(정적)
- Top 50 ggplot2 Visualizations
  - 참고 http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html
 
##### [plotly] package - 대화형 그래프 라이브러리로 Python, R, JavaScript 라이브러리를 제공
- 그래프 결과를 HTML 파일로 출력(동적) 
  - 값 확인, 확대/축소, 이동, 필터 등의 기능을 제공하여 자료 탐색 가능
- Plotly R Open Source Graphing Library
  - 참고 https://plotly.com/r/ - Plotly 패키지에 ggplot2 패키지가 포함되어 있음
  
## [ggplot2] package
##### 기본 3요소
- data: 시각화 자료 - 데이터프레임
- geom: 시각화 종류
  - 점: geom_point()
  - 선: geom_line()
  - 막대: eom_bar()
  
- aesthetics: 시각화 특성 aes()
  - 위치: x, y
  - 크기: size
  - 색상: col, fill
  - 농도: alpha
  
##### 레이어 추가
- ‘+’ 연산자를 사용하여 레이어를 추가하는 형식으로 그래프를 추가하거나 수정함

##### ggplot() 함수
- 그래프를 그리는 기본 함수로 다양한 함수를 추가(+)하여 정교한 그래프를 생성

##### 제목과 축의 이름 설정
- ggtitle(), xlab(), ylab() 함수
- labs() 함수

##### qplot() 함수
- Quick plot: 기본 plot() 함수에 익숙한 사용자를 위한 빠른 그래프 생성

## ggplot2 실습

```{r, warning=FALSE}
### 패키지 설치, 라이브러리 실행

#install.packages("ggplot2")
#install.packages("dplyr")
library(ggplot2)
library(dplyr)
```

```{r}
### [mpg]데이터셋 불러오기, 파악

data_raw <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/mpg.csv")

# 데이터 차원 파악
data_raw %>% dim()
# 데이터 앞부분 출력
data_raw %>% head()
# 데이터 요약 정보
data_raw %>% summary()
```
```{r}
### 첫 번째 컬럼 제거 (X 컬럼 제거)

data_use <- data_raw %>% select(-1)
data_use %>% head()
```

```{r}
### ggplot() : 시각화 자료 + 시각화 특성

# x축, y축 지정
ggplot(data_use, aes(x=displ, y=hwy))
```
```{r}
### ggplot: 시각화 자료 + 시각화 특성 + 시각화 종류

# x=displ, y=hwy 값을 point로 그리기
# 첫 번째 방법
ggplot(data_use, aes(x=displ, y=hwy)) + geom_point()
# 두 번째 방법
ggplot(data_use) + geom_point(aes(x=displ, y=hwy))
# 세 번째 방법
ggplot() + geom_point(aes(x=displ, y=hwy), data=data_use)
```

```{r}
### Smooth line & SE

# 스무스한 선으로 그리기
ggplot(data_use, aes(x=displ, y=hwy)) + geom_smooth()
# point 추가
ggplot(data_use, aes(x=displ,y=hwy)) + geom_smooth() + geom_point()
```

