{
  "hash": "30f22db2483ce26bbe3aa07e1b89c353",
  "result": {
    "markdown": "---\ntitle: \"Data_Visualize Movie_Data\"\nauthor: \"Seongtaek\"\ndate: \"2023-07-02\"\ncategories: [code, data_visualization, rstudio]\nimage: \"movie.png\"\ntoc: true\ntoc-depth: 4\nnumber-sections: true\n---\n\n\n<table align=\"bottom\">\n  <td>\n    <a target=\"_blank\" href=\"기말발표_2.html\"><img\n    src = r_logo.png />HTML파일로 보기</a>\n  </td>\n</table>\n\nFinal Exam\n\n\n\n\n\n### 패키지 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(dplyr)\nlibrary(colorspace)\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(cowplot) # plot_grid\nlibrary(scales)\nlibrary(corrplot)\nlibrary(ggmosaic) # 모자이크와 트리맵\n```\n:::\n\n\n## 데이터 불러오기\n- 1998년 ~ 2023년 4월 국내에서 개봉한 영화\n- 독립/예술 영화가 아닌 일반영화 (해외+국내영화)\n- 1위 ~ 500위\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie <- read_xlsx('C:/Users/seong taek/Desktop/3-1 DataVisualize/data_visualize/역대 박스오피스2.xlsx')\n#> New names:\n#> • `` -> `...5`\n#> • `` -> `...7`\nmovie\n#> # A tibble: 500 × 11\n#>     순위 영화이름   개봉일               매출액 ...5  관객수 ...7  스크…¹ 국적 \n#>    <dbl> <chr>      <dttm>                <dbl> <chr>  <dbl> <chr>  <dbl> <chr>\n#>  1     1 명량       2014-07-30 00:00:00 1.36e11 <NA>  1.76e7 <NA>    1587 한국 \n#>  2     2 극한직업   2019-01-23 00:00:00 1.40e11 <NA>  1.63e7 <NA>    1978 한국 \n#>  3     3 신과함께-… 2017-12-20 00:00:00 1.16e11 <NA>  1.44e7 <NA>    1912 한국 \n#>  4     4 국제시장   2014-12-17 00:00:00 1.11e11 <NA>  1.43e7 <NA>     966 한국 \n#>  5     5 어벤져스:… 2019-04-24 00:00:00 1.22e11 <NA>  1.39e7 <NA>    2835 미국 \n#>  6     6 겨울왕국 2 2019-11-21 00:00:00 1.15e11 <NA>  1.37e7 <NA>    2648 미국 \n#>  7     7 아바타     2009-12-17 00:00:00 1.28e11 <NA>  1.36e7 <NA>     912 미국 \n#>  8     8 베테랑     2015-08-05 00:00:00 1.05e11 <NA>  1.34e7 <NA>    1064 한국 \n#>  9     9 괴물       2006-07-27 00:00:00 0       <NA>  1.30e7 S        167 한국 \n#> 10    10 도둑들     2012-07-25 00:00:00 9.37e10 <NA>  1.30e7 <NA>    1072 한국 \n#> # … with 490 more rows, 2 more variables: 국적2 <chr>, 배급사 <chr>, and\n#> #   abbreviated variable name ¹​스크린수\n```\n:::\n\n\n### 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie <- movie %>% select(-c(5,7,10))\nmovie %>% head()\n#> # A tibble: 6 × 8\n#>    순위 영화이름         개봉일               매출액 관객수 스크…¹ 국적  배급사 \n#>   <dbl> <chr>            <dttm>                <dbl>  <dbl>  <dbl> <chr> <chr>  \n#> 1     1 명량             2014-07-30 00:00:00 1.36e11 1.76e7   1587 한국  (주)씨…\n#> 2     2 극한직업         2019-01-23 00:00:00 1.40e11 1.63e7   1978 한국  (주)씨…\n#> 3     3 신과함께-죄와 벌 2017-12-20 00:00:00 1.16e11 1.44e7   1912 한국  롯데쇼…\n#> 4     4 국제시장         2014-12-17 00:00:00 1.11e11 1.43e7    966 한국  (주)씨…\n#> 5     5 어벤져스: 엔드…  2019-04-24 00:00:00 1.22e11 1.39e7   2835 미국  월트디…\n#> 6     6 겨울왕국 2       2019-11-21 00:00:00 1.15e11 1.37e7   2648 미국  월트디…\n#> # … with abbreviated variable name ¹​스크린수\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie$국적 %>% unique()\n#> [1] \"한국\"   \"미국\"   \"일본\"   \"영국\"   \"중국\"   \"프랑스\"\n```\n:::\n\n\n\n## 상위5위 & 하위5위 그래프\n- 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_rank <- movie %>%                       # 0값이 아닌것만 필터링\n  select(영화이름, 관객수) %>%         # 열 지정 선택        \n  mutate(popratio = 관객수/median(관객수)) %>% # 새로운 컬럼 'popratio' \n  arrange(desc(popratio)) %>%                      # 내림차순 정렬\n  mutate(index = 1:n(),\n         label = ifelse(index<=5 | index > n()-5 | index==median(index), 영화이름,''))\n# index값이 5이하, 행의 수에서 5를 뺀 값보다 크거나, index가 중위수인 index이면 '행정구역.시군구.별' 값을 가지고 그렇지 않으면 ''(빈문자열) 값 가짐\n\nmovie_rank %>% head()\n#> # A tibble: 6 × 5\n#>   영화이름             관객수 popratio index label               \n#>   <chr>                 <dbl>    <dbl> <int> <chr>               \n#> 1 명량               17613682     5.65     1 \"명량\"              \n#> 2 극한직업           16264944     5.22     2 \"극한직업\"          \n#> 3 신과함께-죄와 벌   14410754     4.62     3 \"신과함께-죄와 벌\"  \n#> 4 국제시장           14257115     4.57     4 \"국제시장\"          \n#> 5 어벤져스: 엔드게임 13934592     4.47     5 \"어벤져스: 엔드게임\"\n#> 6 겨울왕국 2         13747792     4.41     6 \"\"\n```\n:::\n\n\n### 상위5위 & 하위5위 시각화\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(movie_rank, aes(x = index, y =관객수)) +\n  geom_hline(yintercept = 1, linetype = 2, color = 'grey40') +\n  geom_point(size = 1, color = 'royalblue')  +\n  geom_text_repel(aes(label = label),\n                  min.segment.length = 0,\n                  max.overlaps = 100) +\n  scale_y_continuous(name = '관객수',\n                     breaks = seq(1000000, 20000000, by = 2000000),\n                     labels = scales::comma_format()(seq(1000000, 20000000, by = 2000000))) +\n  scale_x_discrete(name = '관객수 상위5위 & 하위5위 ',\n                   breaks = NULL) +\n  theme_light() +\n  theme(panel.border = element_blank())\n```\n\n::: {.cell-output-display}\n![](기말발표_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## 매출액 TOP10 영화\n- 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_rank_sales_10 <- movie %>% arrange(-매출액) %>% slice_head(n=10)\nmovie_rank_sales_10\n#> # A tibble: 10 × 8\n#>     순위 영화이름        개봉일               매출액 관객수 스크…¹ 국적  배급사\n#>    <dbl> <chr>           <dttm>                <dbl>  <dbl>  <dbl> <chr> <chr> \n#>  1     2 극한직업        2019-01-23 00:00:00 1.40e11 1.63e7   1978 한국  \"(주)…\n#>  2    25 아바타: 물의 길 2022-12-14 00:00:00 1.38e11 1.08e7   2809 미국  \"월트…\n#>  3     1 명량            2014-07-30 00:00:00 1.36e11 1.76e7   1587 한국  \"(주)…\n#>  4    13 범죄도시2       2022-05-18 00:00:00 1.31e11 1.27e7   2498 한국  \"주식…\n#>  5     7 아바타          2009-12-17 00:00:00 1.28e11 1.36e7    912 미국  \"주식…\n#>  6     5 어벤져스: 엔드… 2019-04-24 00:00:00 1.22e11 1.39e7   2835 미국  \"월트…\n#>  7     3 신과함께-죄와 … 2017-12-20 00:00:00 1.16e11 1.44e7   1912 한국  \"롯데…\n#>  8     6 겨울왕국 2      2019-11-21 00:00:00 1.15e11 1.37e7   2648 미국  \"월트…\n#>  9     4 국제시장        2014-12-17 00:00:00 1.11e11 1.43e7    966 한국  \"(주)…\n#> 10    14 알라딘          2019-05-23 00:00:00 1.07e11 1.26e7   1311 미국  \"월트…\n#> # … with abbreviated variable name ¹​스크린수\n```\n:::\n\n\n### 매출액 TOP10 영화 시각화\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_top10_plot <- \nggplot(movie_rank_sales_10, aes(x=매출액, y=fct_reorder(영화이름, 매출액))) +\n  geom_point(color = \"#0072B2\", size=4) +\n  scale_x_continuous(name = \"총 매출액\",\n                     limits = c(100000000000,160000000000),\n                     expand = c(0,0),\n                     labels = function(x) paste0(x / 1e+8, \"억\")) +\n  scale_y_discrete(name=NULL, expand = c(0, 0.5)) +\n  theme_minimal() +\n  theme(plot.margin = margin(18, -15, 3, 1.5))\n\nsales_top10_plot\n```\n\n::: {.cell-output-display}\n![](기말발표_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## 관객수 대비 매출액 TOP10\n- 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_rank_sales_10_contr <- movie %>% \n  mutate(관객수대비매출액 = (매출액/관객수)) %>%\n  arrange(-관객수대비매출액) %>% slice_head(n=10)\nmovie_rank_sales_10_contr\n#> # A tibble: 10 × 9\n#>     순위 영화…¹  개봉일               매출액 관객수 스크…² 국적  배급사 관객수…³\n#>    <dbl> <chr>   <dttm>                <dbl>  <dbl>  <dbl> <chr> <chr>     <dbl>\n#>  1    25 아바타… 2022-12-14 00:00:00 1.38e11 1.08e7   2809 미국  \"월트…   12739.\n#>  2   311 토르: … 2022-07-06 00:00:00 2.95e10 2.72e6   2143 미국  \"월트…   10862.\n#>  3    43 탑건: … 2022-06-22 00:00:00 8.79e10 8.18e6   1975 미국  \"롯데…   10744.\n#>  4    88 닥터 …  2022-05-04 00:00:00 6.26e10 5.88e6   2691 미국  \"월트…   10646.\n#>  5   325 드래곤… 2010-05-20 00:00:00 2.75e10 2.60e6    562 미국  \"유니…   10550.\n#>  6   434 블랙 …  2022-11-09 00:00:00 2.22e10 2.11e6   2571 미국  \"월트…   10545.\n#>  7   147 더 퍼…  2023-01-04 00:00:00 4.79e10 4.59e6   1023 일본  \"(주)…   10426.\n#>  8   258 이터널… 2021-11-03 00:00:00 3.17e10 3.05e6   2648 미국  \"월트…   10402.\n#>  9   487 헤어질… 2022-06-29 00:00:00 1.97e10 1.90e6   1374 한국  \"(주)…   10369.\n#> 10    13 범죄도… 2022-05-18 00:00:00 1.31e11 1.27e7   2498 한국  \"주식…   10344.\n#> # … with abbreviated variable names ¹​영화이름, ²​스크린수, ³​관객수대비매출액\n```\n:::\n\n\n\n### 관객수 대비 매출액 TOP10\n- 시각화\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_top10_cont_plot <- \nggplot(movie_rank_sales_10_contr, aes(x=관객수대비매출액, y=fct_reorder(영화이름, 관객수대비매출액))) +\n  geom_point(color = \"#0072B2\", size=4) +\n  scale_x_continuous(name = \"1인당 매출액\",\n                     limits = c(10000,14000),\n                     expand = c(0,0),\n                     labels = function(x) paste0(x / 1e+0, \"원\")) +\n  scale_y_discrete(name=NULL, expand = c(0, 0.5)) +\n  theme_minimal() +\n  theme(plot.margin = margin(18, -20, 3, 1.5))\n\nsales_top10_cont_plot\n```\n\n::: {.cell-output-display}\n![](기말발표_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\n### 2개의 매출액 통계 그래프\nplot_ab <- plot_grid(sales_top10_plot,\n                     sales_top10_cont_plot,\n                     nrow= 1,            # 행의 개수\n                     rel_widths= c(3,3), # 각각의 너비\n                     labels= c('총 매출액 TOP10 영화',\n                               '관객수 대비 매출액 TOP10 영화')) # 라벨 a,b\n\nplot_ab\n```\n\n::: {.cell-output-display}\n![](기말발표_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n:::\n\n\n\n## 영화 국적별 스크린수 총합\n- 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncon_movie <- \nmovie %>% group_by(국적) %>% \n  summarise(스크린수총합 = sum(스크린수),\n         매출액총합 = sum(매출액, na.rm = T)) \n  \n\ncon_movie$color <- c(\"#B6494A\", \"#000000\", \"#FFED00\", \"#E30113\", \"#E7D739\",\"#4E4E4E\")\ncon_movie\n#> # A tibble: 6 × 4\n#>   국적   스크린수총합    매출액총합 color  \n#>   <chr>         <dbl>         <dbl> <chr>  \n#> 1 미국         197817 5830394959732 #B6494A\n#> 2 영국            568   24982533500 #000000\n#> 3 일본           2350   98086049816 #FFED00\n#> 4 중국            473   17910684413 #E30113\n#> 5 프랑스          936   33552487553 #E7D739\n#> 6 한국         209321 7519517818134 #4E4E4E\n\ncon_movie2 <- con_movie %>% \n  arrange(스크린수총합) %>% \n  mutate(party_fac = factor(국적, levels = 국적[order(스크린수총합)]),\n         value = 스크린수총합,\n         ypos = sum(value) - (cumsum(value)-0.5*value),\n         mid_angle = 2*pi*(ypos/sum(value)),\n         hjust = ifelse(mid_angle<pi, 1, 0),\n         vjust = ifelse(mid_angle<pi, mid_angle/pi, 2-mid_angle/pi))\n\ncon_movie2\n#> # A tibble: 6 × 10\n#>   국적   스크린수총합 매출액…¹ color party…²  value   ypos mid_a…³ hjust   vjust\n#>   <chr>         <dbl>    <dbl> <chr> <fct>    <dbl>  <dbl>   <dbl> <dbl>   <dbl>\n#> 1 중국            473  1.79e10 #E30… 중국       473 4.11e5    6.28     0 0.00115\n#> 2 영국            568  2.50e10 #000… 영국       568 4.11e5    6.27     0 0.00368\n#> 3 프랑스          936  3.36e10 #E7D… 프랑스     936 4.10e5    6.26     0 0.00733\n#> 4 일본           2350  9.81e10 #FFE… 일본      2350 4.08e5    6.24     0 0.0153 \n#> 5 미국         197817  5.83e12 #B64… 미국    197817 3.08e5    4.71     0 0.502  \n#> 6 한국         209321  7.52e12 #4E4… 한국    209321 1.05e5    1.60     1 0.509  \n#> # … with abbreviated variable names ¹​매출액총합, ²​party_fac, ³​mid_angle\n```\n:::\n\n\n\n### 영화 국적별 스크린수 총합\n- 시각화\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(con_movie2, aes(x=\"\", y=스크린수총합, fill=party_fac)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(x=1, y=ypos, label=스크린수총합), color=\"white\", size=6) +\n  geom_text(aes(x=1.5, y=ypos, label=국적, hjust=hjust, vjust=vjust),\n            color=\"black\", size=0) +\n  geom_text_repel(aes(label = party_fac), size = 6,\n                  nudge_x = ifelse(con_movie2$party_fac == \"미국\", 1, 1),\n                  nudge_y = ifelse(con_movie2$party_fac == \"한국\", -2, 1),\n                  segment.color = \"black\",\n                  force = 20,\n                  segment.size = 0.6) +\n  coord_polar(theta = \"y\", start = 0, direction = -1, clip = \"off\") +\n  scale_fill_manual(values = con_movie2$color) +\n  theme_void() +\n  theme(legend.position = \"none\") +\n  labs(title = \"영화 국적별 스크린 수\") +\n  theme(plot.title = element_text(size = 18))\n```\n\n::: {.cell-output-display}\n![](기말발표_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# date 형식 '개봉일' 생성\n\nmovie %>% sapply(class)\n#> $순위\n#> [1] \"numeric\"\n#> \n#> $영화이름\n#> [1] \"character\"\n#> \n#> $개봉일\n#> [1] \"POSIXct\" \"POSIXt\" \n#> \n#> $매출액\n#> [1] \"numeric\"\n#> \n#> $관객수\n#> [1] \"numeric\"\n#> \n#> $스크린수\n#> [1] \"numeric\"\n#> \n#> $국적\n#> [1] \"character\"\n#> \n#> $배급사\n#> [1] \"character\"\n\nmovie$개봉일 <- movie$개봉일 %>% as.Date()\nmovie\n#> # A tibble: 500 × 8\n#>     순위 영화이름           개봉일           매출액  관객수 스크…¹ 국적  배급사\n#>    <dbl> <chr>              <date>            <dbl>   <dbl>  <dbl> <chr> <chr> \n#>  1     1 명량               2014-07-30 135748398910  1.76e7   1587 한국  \"(주)…\n#>  2     2 극한직업           2019-01-23 139647979516  1.63e7   1978 한국  \"(주)…\n#>  3     3 신과함께-죄와 벌   2017-12-20 115698654137  1.44e7   1912 한국  \"롯데…\n#>  4     4 국제시장           2014-12-17 110913469630  1.43e7    966 한국  \"(주)…\n#>  5     5 어벤져스: 엔드게임 2019-04-24 122182694160  1.39e7   2835 미국  \"월트…\n#>  6     6 겨울왕국 2         2019-11-21 114810421450  1.37e7   2648 미국  \"월트…\n#>  7     7 아바타             2009-12-17 128447097523  1.36e7    912 미국  \"주식…\n#>  8     8 베테랑             2015-08-05 105168155250  1.34e7   1064 한국  \"(주)…\n#>  9     9 괴물               2006-07-27            0  1.30e7    167 한국  \"(주)…\n#> 10    10 도둑들             2012-07-25  93665568500  1.30e7   1072 한국  \"(주)…\n#> # … with 490 more rows, and abbreviated variable name ¹​스크린수\n```\n:::\n\n\n\n\n\n## 연도별 통계 시각화\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 관객수 \nmovie_sum <- movie %>%\n  mutate(연도 = lubridate::year(개봉일)) %>%\n  group_by(연도) %>%\n  summarise(총합 = sum(관객수))\n\nmovie_sum\n#> # A tibble: 26 × 2\n#>     연도     총합\n#>    <dbl>    <dbl>\n#>  1  1998  1971780\n#>  2  1999  8130000\n#>  3  2000  2513540\n#>  4  2001  2678846\n#>  5  2002 16367697\n#>  6  2003 64995866\n#>  7  2004 62340959\n#>  8  2005 85616773\n#>  9  2006 82869100\n#> 10  2007 74889204\n#> # … with 16 more rows\n\nsum1_plot <- \nggplot(movie_sum, aes(x = 연도, y = 총합)) +\n  geom_line(color = \"royalblue\", size = 1) +\n  scale_x_continuous(name = \"개봉연도\") +\n  scale_y_continuous(labels = comma, name = \"관객수 총합\") +\n  labs(title = \"연도별 관객수 총합\") +\n  theme_minimal()\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n\n\n# 스크린수\nmovie_sum2 <- movie %>%\n  mutate(연도 = lubridate::year(개봉일)) %>%\n  group_by(연도) %>%\n  summarise(총합 = sum(스크린수))\n\nmovie_sum2\n#> # A tibble: 26 × 2\n#>     연도  총합\n#>    <dbl> <dbl>\n#>  1  1998     0\n#>  2  1999     0\n#>  3  2000     0\n#>  4  2001     0\n#>  5  2002   280\n#>  6  2003  1293\n#>  7  2004  1412\n#>  8  2005  2070\n#>  9  2006  2134\n#> 10  2007  2708\n#> # … with 16 more rows\n\nsum2_plot <- \nggplot(movie_sum2, aes(x = 연도, y = 총합)) +\n  geom_line(color = \"royalblue\", size = 1) +\n  scale_x_continuous(name = \"개봉연도\") +\n  scale_y_continuous(labels = comma, name = \"스크린수 총합\") +\n  labs(title = \"연도별 스크린수 총합\") +\n  theme_minimal()\n\n# 매출액\nmovie_sum3 <- movie %>%\n  mutate(연도 = lubridate::year(개봉일)) %>%\n  group_by(연도) %>%\n  summarise(총합 = sum(매출액,na.rm = T))\n\nmovie_sum3\n#> # A tibble: 26 × 2\n#>     연도      총합\n#>    <dbl>     <dbl>\n#>  1  1998         0\n#>  2  1999         0\n#>  3  2000         0\n#>  4  2001         0\n#>  5  2002         0\n#>  6  2003         0\n#>  7  2004         0\n#>  8  2005         0\n#>  9  2006         0\n#> 10  2007 549434500\n#> # … with 16 more rows\n\nlabel_억 <- function(x) {\n  x <- x / 1e8\n  sprintf(\"%.0f억\", x)}  #억\n\nsum3_plot <- \nggplot(movie_sum3, aes(x = 연도, y = 총합)) +\n  geom_line(color = \"royalblue\", size = 1) +\n  scale_x_continuous(name = \"개봉연도\") +\n  scale_y_continuous(labels = label_억, name = \"매출액 총합\", expand = c(0, 0)) +\n  labs(title = \"연도별 매출액 총합\") +\n  theme_minimal()\n\n\n### 2개의 temp_long 그래프\nplot_2 <- plot_grid(sum1_plot,\n                     sum2_plot,\n                     nrow= 1,            # 행의 개수\n                     rel_widths= c(1.5,1.5)) # 각각의 너비\n\n\n\n### plot_ab 그래프 + templong 그래프\nplot_abc <- plot_grid(plot_2,\n                      sum3_plot,\n                      ncol= 1,               # 열의 개수\n                      rel_heights= c(1.5, 1))# 각각의 높이\n\nplot_abc\n```\n\n::: {.cell-output-display}\n![](기말발표_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie %>% group_by(국적)\n#> # A tibble: 500 × 8\n#> # Groups:   국적 [6]\n#>     순위 영화이름           개봉일           매출액  관객수 스크…¹ 국적  배급사\n#>    <dbl> <chr>              <date>            <dbl>   <dbl>  <dbl> <chr> <chr> \n#>  1     1 명량               2014-07-30 135748398910  1.76e7   1587 한국  \"(주)…\n#>  2     2 극한직업           2019-01-23 139647979516  1.63e7   1978 한국  \"(주)…\n#>  3     3 신과함께-죄와 벌   2017-12-20 115698654137  1.44e7   1912 한국  \"롯데…\n#>  4     4 국제시장           2014-12-17 110913469630  1.43e7    966 한국  \"(주)…\n#>  5     5 어벤져스: 엔드게임 2019-04-24 122182694160  1.39e7   2835 미국  \"월트…\n#>  6     6 겨울왕국 2         2019-11-21 114810421450  1.37e7   2648 미국  \"월트…\n#>  7     7 아바타             2009-12-17 128447097523  1.36e7    912 미국  \"주식…\n#>  8     8 베테랑             2015-08-05 105168155250  1.34e7   1064 한국  \"(주)…\n#>  9     9 괴물               2006-07-27            0  1.30e7    167 한국  \"(주)…\n#> 10    10 도둑들             2012-07-25  93665568500  1.30e7   1072 한국  \"(주)…\n#> # … with 490 more rows, and abbreviated variable name ¹​스크린수\n\ndatetime <- as.POSIXct(movie$개봉일, format = \"%Y-%m-%d %H:%M:%S\")\ndatetime_str <- format(datetime, \"%Y-%m-%d\")\n\nmovie$개봉연도 <-  substr(datetime_str,1,4)\nmovie\n#> # A tibble: 500 × 9\n#>     순위 영화이름         개봉일      매출액 관객수 스크…¹ 국적  배급사 개봉연도\n#>    <dbl> <chr>            <date>       <dbl>  <dbl>  <dbl> <chr> <chr>  <chr>   \n#>  1     1 명량             2014-07-30 1.36e11 1.76e7   1587 한국  \"(주)… 2014    \n#>  2     2 극한직업         2019-01-23 1.40e11 1.63e7   1978 한국  \"(주)… 2019    \n#>  3     3 신과함께-죄와 벌 2017-12-20 1.16e11 1.44e7   1912 한국  \"롯데… 2017    \n#>  4     4 국제시장         2014-12-17 1.11e11 1.43e7    966 한국  \"(주)… 2014    \n#>  5     5 어벤져스: 엔드…  2019-04-24 1.22e11 1.39e7   2835 미국  \"월트… 2019    \n#>  6     6 겨울왕국 2       2019-11-21 1.15e11 1.37e7   2648 미국  \"월트… 2019    \n#>  7     7 아바타           2009-12-17 1.28e11 1.36e7    912 미국  \"주식… 2009    \n#>  8     8 베테랑           2015-08-05 1.05e11 1.34e7   1064 한국  \"(주)… 2015    \n#>  9     9 괴물             2006-07-27 0       1.30e7    167 한국  \"(주)… 2006    \n#> 10    10 도둑들           2012-07-25 9.37e10 1.30e7   1072 한국  \"(주)… 2012    \n#> # … with 490 more rows, and abbreviated variable name ¹​스크린수\n\nmovie_group_year <- \nmovie %>% group_by(개봉연도) %>% \n  summarise(관객수총합 = sum(관객수),\n            스크린총합 = sum(스크린수))\n\n\nmovie_group_year\n#> # A tibble: 26 × 3\n#>    개봉연도 관객수총합 스크린총합\n#>    <chr>         <dbl>      <dbl>\n#>  1 1998        1971780          0\n#>  2 1999        8130000          0\n#>  3 2000        2513540          0\n#>  4 2001        2678846          0\n#>  5 2002       16367697        280\n#>  6 2003       64995866       1293\n#>  7 2004       62340959       1412\n#>  8 2005       85616773       2070\n#>  9 2006       82869100       2134\n#> 10 2007       74889204       2708\n#> # … with 16 more rows\n```\n:::\n\n\n\n\n## 국적별 국내 개봉 스크린 수\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie\n#> # A tibble: 500 × 9\n#>     순위 영화이름         개봉일      매출액 관객수 스크…¹ 국적  배급사 개봉연도\n#>    <dbl> <chr>            <date>       <dbl>  <dbl>  <dbl> <chr> <chr>  <chr>   \n#>  1     1 명량             2014-07-30 1.36e11 1.76e7   1587 한국  \"(주)… 2014    \n#>  2     2 극한직업         2019-01-23 1.40e11 1.63e7   1978 한국  \"(주)… 2019    \n#>  3     3 신과함께-죄와 벌 2017-12-20 1.16e11 1.44e7   1912 한국  \"롯데… 2017    \n#>  4     4 국제시장         2014-12-17 1.11e11 1.43e7    966 한국  \"(주)… 2014    \n#>  5     5 어벤져스: 엔드…  2019-04-24 1.22e11 1.39e7   2835 미국  \"월트… 2019    \n#>  6     6 겨울왕국 2       2019-11-21 1.15e11 1.37e7   2648 미국  \"월트… 2019    \n#>  7     7 아바타           2009-12-17 1.28e11 1.36e7    912 미국  \"주식… 2009    \n#>  8     8 베테랑           2015-08-05 1.05e11 1.34e7   1064 한국  \"(주)… 2015    \n#>  9     9 괴물             2006-07-27 0       1.30e7    167 한국  \"(주)… 2006    \n#> 10    10 도둑들           2012-07-25 9.37e10 1.30e7   1072 한국  \"(주)… 2012    \n#> # … with 490 more rows, and abbreviated variable name ¹​스크린수\n\nmovie5 <- movie %>%\n  mutate(year = format(개봉일, \"%Y\")) %>%   # 일시에서 월만 뽑아낸 month 컬럼 생성\n  group_by(국적, year) %>%              # 지점명, month로 그룹화\n  summarise(sum = sum(스크린수)) # 그룹화된 데이터의 집계값 요약                            # 그룹화를 해제하여 일반적인 데이터 프레임 형태로 사용\n#> `summarise()` has grouped output by '국적'. You can override using the\n#> `.groups` argument.\n             # month값을 factor 형태로 수정해서 원하는 levels 지정가능 # sep='' : 간격없이 붙이기\n\nmovie5$year <- movie5$year %>% format()\nmovie5$개봉연도 <- substr(movie5$year,3,4)\nmovie5$개봉연도 <- movie5$개봉연도 %>% as.factor()\n\nmovie5\n#> # A tibble: 54 × 4\n#> # Groups:   국적 [6]\n#>    국적  year    sum 개봉연도\n#>    <chr> <chr> <dbl> <fct>   \n#>  1 미국  1998      0 98      \n#>  2 미국  2002    168 02      \n#>  3 미국  2003    505 03      \n#>  4 미국  2004    532 04      \n#>  5 미국  2005    630 05      \n#>  6 미국  2006    689 06      \n#>  7 미국  2007   1538 07      \n#>  8 미국  2008   4945 08      \n#>  9 미국  2009   6767 09      \n#> 10 미국  2010   6736 10      \n#> # … with 44 more rows\n\nggplot(movie5, aes(x = 개봉연도, y = 국적, fill = sum)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  scale_fill_viridis_c(option = 'E', begin = 0.15, end =  0.98,\n                       name = '스크린수 총합') +\n  coord_fixed(expand = FALSE) +\n  ylab(NULL) +\n  labs(title = \"영화국적별 스크린수 히트맵\") +\n  theme(panel.background = element_rect(fill = \"grey80\")) +\n  scale_x_discrete(labels = c(98,99,seq(00,23,1)))#ylab('')\n```\n\n::: {.cell-output-display}\n![](기말발표_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "기말발표_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}