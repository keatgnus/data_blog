{
  "hash": "7e584d69193be19959f80f89460b85e7",
  "result": {
    "markdown": "---\ntitle: \"Opendata_Analysis CH1\"\nauthor: \"Seongtaek\"\ndate: \"2023-04-14\"\ncategories: [code, opendata_analysis, rstudio]\nimage: \"tidy_logo.png\"\ntoc: true\ntoc-depth: 4\nnumber-sections: true\n---\n\n\n<table align=\"bottom\">\n  <td>\n    <a target=\"_blank\" href=\"tidyverse.html\"><img\n    src = r_logo.png />HTML파일로 보기</a>\n  </td>\n</table>\n\n## 오픈데이터 분석 실습 : Tidyverse 패키지\n\n### 설명\n- 6개의 핵심 패키지 포함 23개의 패키지로 이뤄진 메타 패키지\n  - ggplot2\n  - dplyr\n  - tidyr\n  - readr\n  - purrr\n  - tibble\n  - stringr\n  - forcats\n\n### 패키지 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"tidyverse\")\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n## tidyverse 실습\n- 항공편 데이터 nycflights13\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"nycflights13\")\nlibrary(nycflights13)\n```\n:::\n\n\n\n### 파이프 연산자를 통한 코드 직관화 예시\n- 순차적, 간결함\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrnorm(10000, mean=10, sd=1) %>%        # 평균10, 표준편차1인 정규분포에서 10000개 난수 생성\n  sample(size = 100, replace = F) %>%  # 샘플 100개를 랜덤으로 비복원 추출\n  log() %>%                            # 로그 함수 적용\n  diff() %>%                           # 차분 계산 \n  plot(col=\"red\", type=\"l\")            # 그래프 그리기\n```\n\n::: {.cell-output-display}\n![](tidyverse_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### 행의 수\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 336776\n```\n:::\n:::\n\n\n### 앞부분 훑어보기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n  <int> <int> <int>    <int>       <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n1  2013     1     1      517         515       2     830     819      11 UA     \n2  2013     1     1      533         529       4     850     830      20 UA     \n3  2013     1     1      542         540       2     923     850      33 AA     \n4  2013     1     1      544         545      -1    1004    1022     -18 B6     \n5  2013     1     1      554         600      -6     812     837     -25 DL     \n6  2013     1     1      554         558      -4     740     728      12 UA     \n# … with 9 more variables: flight <int>, tailnum <chr>, origin <chr>,\n#   dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>, minute <dbl>,\n#   time_hour <dttm>, and abbreviated variable names ¹​sched_dep_time,\n#   ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n:::\n\n\n### 그룹화 + 집계값 요약\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### 날짜별 평균 출발지연 시간\nmean_delay_by_day <- flights %>% \n  group_by(year, month, day) %>% \n  summarise(delay = mean(dep_delay, na.rm = T))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year', 'month'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nmean_delay_by_day\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 365 × 4\n# Groups:   year, month [12]\n    year month   day delay\n   <int> <int> <int> <dbl>\n 1  2013     1     1 11.5 \n 2  2013     1     2 13.9 \n 3  2013     1     3 11.0 \n 4  2013     1     4  8.95\n 5  2013     1     5  5.73\n 6  2013     1     6  7.15\n 7  2013     1     7  5.42\n 8  2013     1     8  2.55\n 9  2013     1     9  2.28\n10  2013     1    10  2.84\n# … with 355 more rows\n```\n:::\n:::\n\n\n### select()\n- 컬럼 선택 (순서 지정 가능)\n\n::: {.cell}\n\n```{.r .cell-code}\n### p.s 컬럼이름 되도록 띄어쓰기 사용×\nflights %>% select(year,month,day)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 3\n    year month   day\n   <int> <int> <int>\n 1  2013     1     1\n 2  2013     1     1\n 3  2013     1     1\n 4  2013     1     1\n 5  2013     1     1\n 6  2013     1     1\n 7  2013     1     1\n 8  2013     1     1\n 9  2013     1     1\n10  2013     1     1\n# … with 336,766 more rows\n```\n:::\n:::\n\n\n### 컬럼 선택\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### year ~ day, delay로 끝나는 컬럼 외 2개 컬럼\nflights_sample <- flights %>% \n  select(year:day, ends_with(\"delay\"), distance, air_time)\n\nflights_sample\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 7\n    year month   day dep_delay arr_delay distance air_time\n   <int> <int> <int>     <dbl>     <dbl>    <dbl>    <dbl>\n 1  2013     1     1         2        11     1400      227\n 2  2013     1     1         4        20     1416      227\n 3  2013     1     1         2        33     1089      160\n 4  2013     1     1        -1       -18     1576      183\n 5  2013     1     1        -6       -25      762      116\n 6  2013     1     1        -4        12      719      150\n 7  2013     1     1        -5        19     1065      158\n 8  2013     1     1        -3       -14      229       53\n 9  2013     1     1        -3        -8      944      140\n10  2013     1     1        -2         8      733      138\n# … with 336,766 more rows\n```\n:::\n:::\n\n\n### mutate()\n- 새로운 컬럼 생성\n\n::: {.cell}\n\n```{.r .cell-code}\nflights_sample %>% \n  mutate(net_delay = arr_delay - dep_delay,\n         speed = distance/air_time*60)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 9\n    year month   day dep_delay arr_delay distance air_time net_delay speed\n   <int> <int> <int>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> <dbl>\n 1  2013     1     1         2        11     1400      227         9  370.\n 2  2013     1     1         4        20     1416      227        16  374.\n 3  2013     1     1         2        33     1089      160        31  408.\n 4  2013     1     1        -1       -18     1576      183       -17  517.\n 5  2013     1     1        -6       -25      762      116       -19  394.\n 6  2013     1     1        -4        12      719      150        16  288.\n 7  2013     1     1        -5        19     1065      158        24  404.\n 8  2013     1     1        -3       -14      229       53       -11  259.\n 9  2013     1     1        -3        -8      944      140        -5  405.\n10  2013     1     1        -2         8      733      138        10  319.\n# … with 336,766 more rows\n```\n:::\n:::\n\n\n### filter()\n- 필터링 (조건 설정)\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% filter(month==1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 27,004 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1     1      517        515       2     830     819      11 UA     \n 2  2013     1     1      533        529       4     850     830      20 UA     \n 3  2013     1     1      542        540       2     923     850      33 AA     \n 4  2013     1     1      544        545      -1    1004    1022     -18 B6     \n 5  2013     1     1      554        600      -6     812     837     -25 DL     \n 6  2013     1     1      554        558      -4     740     728      12 UA     \n 7  2013     1     1      555        600      -5     913     854      19 B6     \n 8  2013     1     1      557        600      -3     709     723     -14 EV     \n 9  2013     1     1      557        600      -3     838     846      -8 B6     \n10  2013     1     1      558        600      -2     753     745       8 AA     \n# … with 26,994 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n:::\n\n\n### bind_rows()\n- 두 데이터 묶기\n\n::: {.cell}\n\n```{.r .cell-code}\njan <- flights %>% filter(month==1)\nfeb <- flights %>% filter(month==2)\njanfeb <- bind_rows(jan,feb)\n\njanfeb %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n  <int> <int> <int>    <int>       <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n1  2013     1     1      517         515       2     830     819      11 UA     \n2  2013     1     1      533         529       4     850     830      20 UA     \n3  2013     1     1      542         540       2     923     850      33 AA     \n4  2013     1     1      544         545      -1    1004    1022     -18 B6     \n5  2013     1     1      554         600      -6     812     837     -25 DL     \n6  2013     1     1      554         558      -4     740     728      12 UA     \n# … with 9 more variables: flight <int>, tailnum <chr>, origin <chr>,\n#   dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>, minute <dbl>,\n#   time_hour <dttm>, and abbreviated variable names ¹​sched_dep_time,\n#   ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n\n```{.r .cell-code}\njanfeb %>% tail()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n  <int> <int> <int>    <int>       <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n1  2013     2    28       NA         605      NA      NA     805      NA MQ     \n2  2013     2    28       NA         850      NA      NA    1035      NA MQ     \n3  2013     2    28       NA         905      NA      NA    1115      NA MQ     \n4  2013     2    28       NA        1115      NA      NA    1310      NA MQ     \n5  2013     2    28       NA         830      NA      NA    1205      NA UA     \n6  2013     2    28       NA         840      NA      NA    1147      NA UA     \n# … with 9 more variables: flight <int>, tailnum <chr>, origin <chr>,\n#   dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>, minute <dbl>,\n#   time_hour <dttm>, and abbreviated variable names ¹​sched_dep_time,\n#   ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n\n```{.r .cell-code}\n### filter로 간결하게 사용\nflights %>% filter(month %in% c(1,2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 51,955 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1     1      517        515       2     830     819      11 UA     \n 2  2013     1     1      533        529       4     850     830      20 UA     \n 3  2013     1     1      542        540       2     923     850      33 AA     \n 4  2013     1     1      544        545      -1    1004    1022     -18 B6     \n 5  2013     1     1      554        600      -6     812     837     -25 DL     \n 6  2013     1     1      554        558      -4     740     728      12 UA     \n 7  2013     1     1      555        600      -5     913     854      19 B6     \n 8  2013     1     1      557        600      -3     709     723     -14 EV     \n 9  2013     1     1      557        600      -3     838     846      -8 B6     \n10  2013     1     1      558        600      -2     753     745       8 AA     \n# … with 51,945 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n:::\n\n\n### arrange()\n- 데이터 정렬 (오름/내림차순)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% arrange(dep_delay)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013    12     7     2040       2123     -43      40    2352      48 B6     \n 2  2013     2     3     2022       2055     -33    2240    2338     -58 DL     \n 3  2013    11    10     1408       1440     -32    1549    1559     -10 EV     \n 4  2013     1    11     1900       1930     -30    2233    2243     -10 DL     \n 5  2013     1    29     1703       1730     -27    1947    1957     -10 F9     \n 6  2013     8     9      729        755     -26    1002     955       7 MQ     \n 7  2013    10    23     1907       1932     -25    2143    2143       0 EV     \n 8  2013     3    30     2030       2055     -25    2213    2250     -37 MQ     \n 9  2013     3     2     1431       1455     -24    1601    1631     -30 9E     \n10  2013     5     5      934        958     -24    1225    1309     -44 B6     \n# … with 336,766 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n\n```{.r .cell-code}\nflights %>% arrange(-dep_delay)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1     9      641        900    1301    1242    1530    1272 HA     \n 2  2013     6    15     1432       1935    1137    1607    2120    1127 MQ     \n 3  2013     1    10     1121       1635    1126    1239    1810    1109 MQ     \n 4  2013     9    20     1139       1845    1014    1457    2210    1007 AA     \n 5  2013     7    22      845       1600    1005    1044    1815     989 MQ     \n 6  2013     4    10     1100       1900     960    1342    2211     931 DL     \n 7  2013     3    17     2321        810     911     135    1020     915 DL     \n 8  2013     6    27      959       1900     899    1236    2226     850 DL     \n 9  2013     7    22     2257        759     898     121    1026     895 DL     \n10  2013    12     5      756       1700     896    1058    2020     878 AA     \n# … with 336,766 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n:::\n\n\n### 그룹화 + 집계값 요약\n- 월별 평균 지연시간, 개수\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% \n  group_by(month) %>% \n  summarise(mean_dep_delay = mean(dep_delay, na.rm = T),\n            count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n   month mean_dep_delay count\n   <int>          <dbl> <int>\n 1     1          10.0  27004\n 2     2          10.8  24951\n 3     3          13.2  28834\n 4     4          13.9  28330\n 5     5          13.0  28796\n 6     6          20.8  28243\n 7     7          21.7  29425\n 8     8          12.6  29327\n 9     9           6.72 27574\n10    10           6.24 28889\n11    11           5.44 27268\n12    12          16.6  28135\n```\n:::\n:::\n\n\n### left_join\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### 컬럼 선택\nflights_sample2 <- flights %>% \n  select(year:day, origin, carrier)\n\nflights_sample2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 5\n    year month   day origin carrier\n   <int> <int> <int> <chr>  <chr>  \n 1  2013     1     1 EWR    UA     \n 2  2013     1     1 LGA    UA     \n 3  2013     1     1 JFK    AA     \n 4  2013     1     1 JFK    B6     \n 5  2013     1     1 LGA    DL     \n 6  2013     1     1 EWR    UA     \n 7  2013     1     1 EWR    B6     \n 8  2013     1     1 LGA    EV     \n 9  2013     1     1 JFK    B6     \n10  2013     1     1 LGA    AA     \n# … with 336,766 more rows\n```\n:::\n\n```{.r .cell-code}\n### join 시킬 데이터셋 - 'airlines'\nairlines\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 16 × 2\n   carrier name                       \n   <chr>   <chr>                      \n 1 9E      Endeavor Air Inc.          \n 2 AA      American Airlines Inc.     \n 3 AS      Alaska Airlines Inc.       \n 4 B6      JetBlue Airways            \n 5 DL      Delta Air Lines Inc.       \n 6 EV      ExpressJet Airlines Inc.   \n 7 F9      Frontier Airlines Inc.     \n 8 FL      AirTran Airways Corporation\n 9 HA      Hawaiian Airlines Inc.     \n10 MQ      Envoy Air                  \n11 OO      SkyWest Airlines Inc.      \n12 UA      United Air Lines Inc.      \n13 US      US Airways Inc.            \n14 VX      Virgin America             \n15 WN      Southwest Airlines Co.     \n16 YV      Mesa Airlines Inc.         \n```\n:::\n\n```{.r .cell-code}\n### key값 기준으로 왼쪽에 join\nflights_sample2 %>% \n  left_join(airlines, by=\"carrier\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 6\n    year month   day origin carrier name                    \n   <int> <int> <int> <chr>  <chr>   <chr>                   \n 1  2013     1     1 EWR    UA      United Air Lines Inc.   \n 2  2013     1     1 LGA    UA      United Air Lines Inc.   \n 3  2013     1     1 JFK    AA      American Airlines Inc.  \n 4  2013     1     1 JFK    B6      JetBlue Airways         \n 5  2013     1     1 LGA    DL      Delta Air Lines Inc.    \n 6  2013     1     1 EWR    UA      United Air Lines Inc.   \n 7  2013     1     1 EWR    B6      JetBlue Airways         \n 8  2013     1     1 LGA    EV      ExpressJet Airlines Inc.\n 9  2013     1     1 JFK    B6      JetBlue Airways         \n10  2013     1     1 LGA    AA      American Airlines Inc.  \n# … with 336,766 more rows\n```\n:::\n\n```{.r .cell-code}\n### key값 컬럼 이름이 다를 때\ncolnames(airlines)[1] <- 'different'\n\nflights_sample2 %>% \n  left_join(airlines, by=c(\"carrier\" = \"different\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 6\n    year month   day origin carrier name                    \n   <int> <int> <int> <chr>  <chr>   <chr>                   \n 1  2013     1     1 EWR    UA      United Air Lines Inc.   \n 2  2013     1     1 LGA    UA      United Air Lines Inc.   \n 3  2013     1     1 JFK    AA      American Airlines Inc.  \n 4  2013     1     1 JFK    B6      JetBlue Airways         \n 5  2013     1     1 LGA    DL      Delta Air Lines Inc.    \n 6  2013     1     1 EWR    UA      United Air Lines Inc.   \n 7  2013     1     1 EWR    B6      JetBlue Airways         \n 8  2013     1     1 LGA    EV      ExpressJet Airlines Inc.\n 9  2013     1     1 JFK    B6      JetBlue Airways         \n10  2013     1     1 LGA    AA      American Airlines Inc.  \n# … with 336,766 more rows\n```\n:::\n:::\n\n\n## Quiz\n- 1. 월 마다 가장 연착이 긴 시간 톺아보기\n- 2. 월 마다 가장 연착이 많이된 비행기는 해당월의 평균보다 몇배가 높나?\n\n::: {.cell}\n\n```{.r .cell-code}\n### 1\nflights %>%\n  group_by(month) %>% \n  summarise(max_dep_delay = max(dep_delay, na.rm = T)) %>% \n  arrange(-max_dep_delay)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 2\n   month max_dep_delay\n   <int>         <dbl>\n 1     1          1301\n 2     6          1137\n 3     9          1014\n 4     7          1005\n 5     4           960\n 6     3           911\n 7    12           896\n 8     5           878\n 9     2           853\n10    11           798\n11    10           702\n12     8           520\n```\n:::\n\n```{.r .cell-code}\n### 2\nflights %>%\n  group_by(month) %>% \n  summarise(mean_dep_delay = mean(dep_delay, na.rm = T),\n            max_dep_delay = max(dep_delay, na.rm = T),\n            compare = max_dep_delay/mean_dep_delay)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 4\n   month mean_dep_delay max_dep_delay compare\n   <int>          <dbl>         <dbl>   <dbl>\n 1     1          10.0           1301   130. \n 2     2          10.8            853    78.9\n 3     3          13.2            911    68.9\n 4     4          13.9            960    68.9\n 5     5          13.0            878    67.6\n 6     6          20.8           1137    54.5\n 7     7          21.7           1005    46.3\n 8     8          12.6            520    41.2\n 9     9           6.72          1014   151. \n10    10           6.24           702   112. \n11    11           5.44           798   147. \n12    12          16.6            896    54.1\n```\n:::\n:::\n",
    "supporting": [
      "tidyverse_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}