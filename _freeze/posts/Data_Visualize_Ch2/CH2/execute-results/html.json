{
  "hash": "05d719cdcd9dce3115323e37e9e97b18",
  "result": {
    "markdown": "---\ntitle: \"Data_Visualize CH2\"\nauthor: \"Seongtaek\"\ndate: \"2023-03-30\"\ncategories: [code, data_visualize, rstudio]\nimage: \"ch2.png\"\ntoc: true\ntoc-depth: 3\nnumber-sections: true\n---\n\n\n<table align=\"bottom\">\n  <td>\n    <a target=\"_blank\" href=\"ch2html.html\"><img\n    src = r_logo.png />HTML파일로 보기</a>\n  </td>\n</table>\n\nFigure 2.3, Figure 2.4\n\n\n\n\n\n\n##  데이터 시각화 실습 : 계절성 그래프 Figure 2.3, Figure 2.4\n\n### 패키지 불러오기\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n#> \n#> Attaching package: 'dplyr'\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\n```\n:::\n\n### 파일 불러오기\n- ncdc_normals.csv (날짜별 온도 등 데이터셋)\n\n::: {.cell}\n\n```{.r .cell-code}\nncdc_normals <- read.csv('C:/Users/seong taek/Desktop/3-1 DataVisualize/data_visualize/ncdc_normals.csv')\n```\n:::\n\n\n### 불러온 데이터셋 파악\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### 차원 파악\nncdc_normals %>% dim()\n#> [1] 2745366       6\n\n### 앞부분 훑어보기\nncdc_normals %>% head()\n#>    station_id month day temperature flag       date\n#> 1 AQW00061705     1   1        82.4    C 0000-01-01\n#> 2 AQW00061705     1   2        82.4    C 0000-01-02\n#> 3 AQW00061705     1   3        82.4    C 0000-01-03\n#> 4 AQW00061705     1   4        82.4    C 0000-01-04\n#> 5 AQW00061705     1   5        82.4    C 0000-01-05\n#> 6 AQW00061705     1   6        82.4    C 0000-01-06\n\n### 통계 요약 정보\nncdc_normals %>% summary()\n#>   station_id            month             day         temperature    \n#>  Length:2745366     Min.   : 1.000   Min.   : 1.00   Min.   :-21.80  \n#>  Class :character   1st Qu.: 4.000   1st Qu.: 8.00   1st Qu.: 39.70  \n#>  Mode  :character   Median : 7.000   Median :16.00   Median : 54.60  \n#>                     Mean   : 6.514   Mean   :15.76   Mean   : 53.17  \n#>                     3rd Qu.:10.000   3rd Qu.:23.00   3rd Qu.: 68.10  \n#>                     Max.   :12.000   Max.   :31.00   Max.   :103.20  \n#>      flag               date          \n#>  Length:2745366     Length:2745366    \n#>  Class :character   Class :character  \n#>  Mode  :character   Mode  :character  \n#>                                       \n#>                                       \n#> \n\n### 각 컬럼 클래스(타입) 확인\nncdc_normals %>% sapply(class)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"   \"numeric\" \"character\" \"character\"\n\n### 각 컬럼 자료형 확인\nncdc_normals %>% sapply(typeof)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"    \"double\" \"character\" \"character\"\n```\n:::\n\n\n### 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### character → date 형식 변환\n\nncdc_normals$date <- ncdc_normals$date%>% as.Date(\"%Y-%m-%d\")\n\nncdc_normals %>% sapply(class)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"   \"numeric\" \"character\"      \"Date\"\n\nncdc_normals %>% sapply(typeof)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"    \"double\" \"character\"    \"double\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### station_id 종류 개수\n\nncdc_normals$station_id %>% unique() %>% length()\n#> [1] 7501\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n###  station_id 선정 후, location(컬럼 이름) 지정한 data.frame 생성\n\nstation_loc <- data.frame(station_id = c(\"USW00014819\",\"USC00042319\",\"USW00093107\",\"USW00012918\"),\n                          location = c(\"Chicago\",\"Death Valley\",\"San Diego\",\"Houston\"))\nstation_loc\n#>    station_id     location\n#> 1 USW00014819      Chicago\n#> 2 USC00042319 Death Valley\n#> 3 USW00093107    San Diego\n#> 4 USW00012918      Houston\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### station_id로 ncdc_normals와 station_loc 두 컬럼을 `inner_join`\n\ntemps_long <- ncdc_normals %>% inner_join(station_loc, by=\"station_id\")\n\ntemps_long %>% head()\n#>    station_id month day temperature flag       date     location\n#> 1 USC00042319     1   1        51.0    S 0000-01-01 Death Valley\n#> 2 USC00042319     1   2        51.2    S 0000-01-02 Death Valley\n#> 3 USC00042319     1   3        51.3    S 0000-01-03 Death Valley\n#> 4 USC00042319     1   4        51.4    S 0000-01-04 Death Valley\n#> 5 USC00042319     1   5        51.6    S 0000-01-05 Death Valley\n#> 6 USC00042319     1   6        51.7    S 0000-01-06 Death Valley\n\ntemps_long %>% dim()\n#> [1] 1464    7\n\ntemps_long$date %>% class()\n#> [1] \"Date\"\n```\n:::\n\n### x축에 표시할 눈금 생성\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### x축 범위 설정을 위해 date 범위 파악\ntemps_long$date %>% head()\n#> [1] \"0000-01-01\" \"0000-01-02\" \"0000-01-03\" \"0000-01-04\" \"0000-01-05\"\n#> [6] \"0000-01-06\"\ntemps_long$date %>% tail()\n#> [1] \"0000-12-26\" \"0000-12-27\" \"0000-12-28\" \"0000-12-29\" \"0000-12-30\"\n#> [6] \"0000-12-31\"\n\n### 범위 설정\ndate_s <- '0000-01-01' %>% as.Date('%Y-%m-%d')\ndate_e <- '0001-01-01' %>% as.Date('%Y-%m-%d')\n\n### data_s ~ date_e까지 3개월 단위로 나누기\nbreak_date <- seq(date_s, date_e, by = '3 month')\n\nbreak_date\n#> [1] \"0000-01-01\" \"0000-04-01\" \"0000-07-01\" \"0000-10-01\" \"0001-01-01\"\n```\n:::\n\n### Fiqure 2.3 ggplot + 축 설정\n- 사용 데이터셋 : temps_long\n- x=date, y=temperature\n- color : location별\n- scale_x_date\n  - 이름 : month\n  - 간격 : break_date (3개월)\n  - 간격 라벨 (Jan ~ Jan)\n- scale_y_continuous\n  - 이름 : temp\n  - 범위 : 0 ~ 110\n- labs : 제목, 부제목\n- 테마 : 밝게\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temps_long, aes(x=date, y=temperature, color=location)) +\n  geom_line() +\n  scale_x_date(name = 'month',\n               breaks = break_date,\n               labels = c('Jan','Apr','Jul','Oct','Jan')) +\n  scale_y_continuous(name = 'temp', limits = c(0,110)) + # continuous 연속형 (온도)\n  # ylab('Temp') +\n  labs(title = 'Fig. 2.3', subtitle = 'Daily temperature normals') +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](CH2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### Figure 2.4 그래프 데이터셋 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemps_long %>% head()\n#>    station_id month day temperature flag       date     location\n#> 1 USC00042319     1   1        51.0    S 0000-01-01 Death Valley\n#> 2 USC00042319     1   2        51.2    S 0000-01-02 Death Valley\n#> 3 USC00042319     1   3        51.3    S 0000-01-03 Death Valley\n#> 4 USC00042319     1   4        51.4    S 0000-01-04 Death Valley\n#> 5 USC00042319     1   5        51.6    S 0000-01-05 Death Valley\n#> 6 USC00042319     1   6        51.7    S 0000-01-06 Death Valley\n\ntemps_long %>% names()\n#> [1] \"station_id\"  \"month\"       \"day\"         \"temperature\" \"flag\"       \n#> [6] \"date\"        \"location\"\n\nmean_temps <- temps_long %>%              \n  group_by(location, month) %>%           # location, month로 그룹화 \n  summarise(mean = mean(temperature)) %>% # 그룹화된 데이터의 집계값 요약\n  ungroup() %>%                           # 그룹화를 해제하여 일반적인 데이터 프레임 형태로 사용\n  mutate(month = factor(month %>%         # month값을 factor 형태로 수정해서 원하는 levels 지정가능\n                          paste(), levels = 1:12 %>% paste())) \n#> `summarise()` has grouped output by 'location'. You can override using the\n#> `.groups` argument.\n\nmean_temps\n#> # A tibble: 48 × 3\n#>    location month  mean\n#>    <chr>    <fct> <dbl>\n#>  1 Chicago  1      24.8\n#>  2 Chicago  2      28.9\n#>  3 Chicago  3      38.8\n#>  4 Chicago  4      50.4\n#>  5 Chicago  5      60.9\n#>  6 Chicago  6      71.0\n#>  7 Chicago  7      75.8\n#>  8 Chicago  8      74.1\n#>  9 Chicago  9      66.4\n#> 10 Chicago  10     54.3\n#> # … with 38 more rows\n```\n:::\n\n\n### Figure 2.4 ggplot + geom_tile + fill color\n- 사용 데이터셋 : mean_temps\n- x=month, y=location\n- fill : mean\n- geom_tile : 넓이, 높이 지정\n- scale_fill_viridis_c\n  - 이름 : temperature\n  - 옵션 : B (밝기)\n  - begin, end : 색상의 시작,끝\n- coord_fixed\n  - expand = F : 공백 제거\n- ylab(NULL) : y축 이름 제거\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mean_temps, aes(x = month, y = location, fill = mean)) +\n  geom_tile(width = .95, height = 0.95) +\n  scale_fill_viridis_c(option = 'B', begin = 0.15, end =  0.98,\n                       name = 'temperature') +\n  coord_fixed(expand = FALSE) +\n  ylab(NULL) #ylab('')\n```\n\n::: {.cell-output-display}\n![](CH2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n## 예제 : 2021년 기상청 자료 Figure 2.3, Figure 2.4\n\n### csv파일 불러오기, 데이터 파악\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2021 <- read.csv('C:/Users/seong taek/Desktop/3-1 DataVisualize/data_visualize/OBS_ASOS_DD_20220308125952.csv', fileEncoding = 'cp949')\n\ndata_2021 %>% dim()\n#> [1] 1460    6\n\ndata_2021 %>% head()\n#>   지점 지점명       일시 평균기온..C. 최저기온..C. 최고기온..C.\n#> 1  108   서울 2021-01-01         -4.2         -9.8          1.6\n#> 2  108   서울 2021-01-02         -5.0         -8.4         -1.4\n#> 3  108   서울 2021-01-03         -5.6         -9.1         -2.0\n#> 4  108   서울 2021-01-04         -3.5         -8.4          0.3\n#> 5  108   서울 2021-01-05         -5.5         -9.9         -2.1\n#> 6  108   서울 2021-01-06         -7.4        -12.0         -1.9\n\ndata_2021 %>% sapply(class)\n#>         지점       지점명         일시 평균기온..C. 최저기온..C. 최고기온..C. \n#>    \"integer\"  \"character\"  \"character\"    \"numeric\"    \"numeric\"    \"numeric\"\n```\n:::\n\n### `일시`를 character → date형식으로 변환\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2021$일시 <- data_2021$일시 %>% as.Date('%Y-%m-%d')\n\ndata_2021 %>% sapply(class)\n#>         지점       지점명         일시 평균기온..C. 최저기온..C. 최고기온..C. \n#>    \"integer\"  \"character\"       \"Date\"    \"numeric\"    \"numeric\"    \"numeric\"\n```\n:::\n\n### 기초통계량 파악\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2021 %>% summary()\n#>       지점          지점명               일시             평균기온..C.   \n#>  Min.   :108.0   Length:1460        Min.   :2021-01-01   Min.   :-14.90  \n#>  1st Qu.:126.8   Class :character   1st Qu.:2021-04-02   1st Qu.:  7.90  \n#>  Median :158.5   Mode  :character   Median :2021-07-02   Median : 15.00  \n#>  Mean   :166.0                      Mean   :2021-07-02   Mean   : 14.77  \n#>  3rd Qu.:197.8                      3rd Qu.:2021-10-01   3rd Qu.: 23.10  \n#>  Max.   :239.0                      Max.   :2021-12-31   Max.   : 31.70  \n#>   최저기온..C.     최고기온..C.   \n#>  Min.   :-19.10   Min.   :-10.70  \n#>  1st Qu.:  3.10   1st Qu.: 13.18  \n#>  Median : 11.10   Median : 20.15  \n#>  Mean   : 10.69   Mean   : 19.56  \n#>  3rd Qu.: 19.60   3rd Qu.: 27.70  \n#>  Max.   : 28.10   Max.   : 36.50\n```\n:::\n\n### x축에 표시할 눈금\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2021$일시 %>% head()\n#> [1] \"2021-01-01\" \"2021-01-02\" \"2021-01-03\" \"2021-01-04\" \"2021-01-05\"\n#> [6] \"2021-01-06\"\n\ndata_2021$일시 %>% tail()\n#> [1] \"2021-12-26\" \"2021-12-27\" \"2021-12-28\" \"2021-12-29\" \"2021-12-30\"\n#> [6] \"2021-12-31\"\n\ndate_s <- '2021-01-01' %>% as.Date('%Y-%m-%d')\ndate_e <- '2022-01-01' %>% as.Date('%Y-%m-%d')\n\nbreak_date <- seq.Date(date_s, date_e, by='3 month')\nbreak_date\n#> [1] \"2021-01-01\" \"2021-04-01\" \"2021-07-01\" \"2021-10-01\" \"2022-01-01\"\n\n### 월만 문자 값으로 뽑아내기\ndate_lab <- format(break_date, '%B')\ndate_lab\n#> [1] \"1월\"  \"4월\"  \"7월\"  \"10월\" \"1월\"\n```\n:::\n\n### Figure 2.3 ggplot + 축 설정\n- 사용 데이터셋 : data_2021\n- x=일시, y=평균기온..C.\n- color : 지점명 별\n- scale_x_date\n  - 이름 : 월\n  - 간격 : break_date (3개월)\n  - 간격 라벨 (1월 ~ 1월)\n- scale_y_continuous\n  - 이름 : 평균기온\n- labs : 제목, 부제목\n- 테마 : 밝게\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### 축 값 지정하기 전 컬럼이름 파악\ndata_2021 %>% names()\n#> [1] \"지점\"         \"지점명\"       \"일시\"         \"평균기온..C.\" \"최저기온..C.\"\n#> [6] \"최고기온..C.\"\n\nggplot(data_2021, aes(x=일시, y=평균기온..C., color=지점명)) +\n  geom_smooth(linewidth = 0.9,se=F,span=0.1) + # linewidth (선 두께), geom_line → smooth 가능\n  scale_x_date(name = '월',                  # se : 테두리, span : 스무스 정도\n               breaks = break_date,\n               labels = date_lab) +\n  scale_y_continuous(name = '평균기온') +\n  labs(title = '2021년 평균온도', subtitle = '4개의 주요 도시') +\n  theme_light()\n#> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n\n::: {.cell-output-display}\n![](CH2_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n### Figure 2.4 그래프 데이터셋 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2021 %>% names()\n#> [1] \"지점\"         \"지점명\"       \"일시\"         \"평균기온..C.\" \"최저기온..C.\"\n#> [6] \"최고기온..C.\"\n\ndata_2021 %>% head()\n#>   지점 지점명       일시 평균기온..C. 최저기온..C. 최고기온..C.\n#> 1  108   서울 2021-01-01         -4.2         -9.8          1.6\n#> 2  108   서울 2021-01-02         -5.0         -8.4         -1.4\n#> 3  108   서울 2021-01-03         -5.6         -9.1         -2.0\n#> 4  108   서울 2021-01-04         -3.5         -8.4          0.3\n#> 5  108   서울 2021-01-05         -5.5         -9.9         -2.1\n#> 6  108   서울 2021-01-06         -7.4        -12.0         -1.9\n\ndata_2021_month <- data_2021 %>%\n  mutate(month = format(일시, '%B')) %>%    # 일시에서 월만 뽑아낸 month 컬럼 생성\n  group_by(지점명, month) %>%               # 지점명, month로 그룹화\n  summarise(mean = mean(평균기온..C.)) %>%  # 그룹화된 데이터의 집계값 요약\n  ungroup() %>%                            # 그룹화를 해제하여 일반적인 데이터 프레임 형태로 사용\n  mutate(month = factor(month,             # month값을 factor 형태로 수정해서 원하는 levels 지정가능\n                        levels = paste(1:12, '월',sep = ''))) # sep='' : 간격없이 붙이기\n#> `summarise()` has grouped output by '지점명'. You can override using the\n#> `.groups` argument.\n\ndata_2021_month\n#> # A tibble: 48 × 3\n#>    지점명 month   mean\n#>    <chr>  <fct>  <dbl>\n#>  1 대전   10월  15.7  \n#>  2 대전   11월   8.91 \n#>  3 대전   12월   1.89 \n#>  4 대전   1월   -0.984\n#>  5 대전   2월    3.99 \n#>  6 대전   3월    9.61 \n#>  7 대전   4월   14.7  \n#>  8 대전   5월   17.7  \n#>  9 대전   6월   23.5  \n#> 10 대전   7월   27.8  \n#> # … with 38 more rows\n```\n:::\n\n\n### Figure 2.4 ggplot + geom_tile + fill color\n- 사용 데이터셋 : data_2021_month\n- x=month, y=지점명\n- fill : mean(평균온도)\n- geom_tile : 넓이, 높이 지정\n- scale_fill_viridis_c\n  - 이름 : temperature\n  - 옵션 : B (밝기)\n  - begin, end : 색상의 시작,끝\n- coord_fixed\n  - expand = F : 공백 제거\n- ylab(NULL) : y축 이름 제거\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data_2021_month, aes(x = month, y = 지점명, fill = mean)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  scale_fill_viridis_c(option = 'B', begin = 0.15, end =  0.98,\n                       name = 'temperature') +\n  coord_fixed(expand = FALSE) +\n  ylab(NULL) # ylab('')\n```\n\n::: {.cell-output-display}\n![](CH2_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## 과제 : 2022년 기상청 자료 Figure 2.3, Figure 2.4\n\n### csv파일 불러오기, 데이터 파악\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2022 <- read.csv('C:/Users/seong taek/Desktop/3-1 DataVisualize/data_visualize/OBS_ASOS_DD_20230322080932.csv', fileEncoding = 'cp949')\n\ndata_2022 %>% dim()\n#> [1] 2555    6\n\ndata_2022 %>% head()\n#>   지점 지점명       일시 평균기온..C. 최저기온..C. 최고기온..C.\n#> 1  108   서울 2022-01-01         -4.3        -10.2          2.3\n#> 2  108   서울 2022-01-02         -1.3         -5.2          3.0\n#> 3  108   서울 2022-01-03         -1.9         -8.0          2.5\n#> 4  108   서울 2022-01-04         -2.5         -5.6          1.0\n#> 5  108   서울 2022-01-05         -2.8         -7.8          1.9\n#> 6  108   서울 2022-01-06         -2.2         -5.9          3.3\n\ndata_2022 %>% sapply(class)\n#>         지점       지점명         일시 평균기온..C. 최저기온..C. 최고기온..C. \n#>    \"integer\"  \"character\"  \"character\"    \"numeric\"    \"numeric\"    \"numeric\"\n\n### 결측값 있는지 확인\nsum(is.na(data_2022))\n#> [1] 4\n\n### 결측값 제거\ndata_2022 <- data_2022 %>% na.omit()\n```\n:::\n\n### `일시`를 character → date형식으로 변환\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2022$일시 <- data_2022$일시 %>% as.Date('%Y-%m-%d')\n\ndata_2022 %>% sapply(class)\n#>         지점       지점명         일시 평균기온..C. 최저기온..C. 최고기온..C. \n#>    \"integer\"  \"character\"       \"Date\"    \"numeric\"    \"numeric\"    \"numeric\"\n```\n:::\n\n\n### 기초통계량 파악\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2022 %>% summary()\n#>       지점          지점명               일시             평균기온..C.   \n#>  Min.   :108.0   Length:2552        Min.   :2022-01-01   Min.   :-11.80  \n#>  1st Qu.:133.0   Class :character   1st Qu.:2022-04-02   1st Qu.:  8.20  \n#>  Median :185.0   Mode  :character   Median :2022-07-02   Median : 16.40  \n#>  Mean   :175.1                      Mean   :2022-07-01   Mean   : 15.26  \n#>  3rd Qu.:189.0                      3rd Qu.:2022-10-01   3rd Qu.: 23.00  \n#>  Max.   :239.0                      Max.   :2022-12-31   Max.   : 32.20  \n#>   최저기온..C.     최고기온..C.  \n#>  Min.   :-13.80   Min.   :-8.60  \n#>  1st Qu.:  4.20   1st Qu.:12.30  \n#>  Median : 12.60   Median :20.70  \n#>  Mean   : 11.62   Mean   :19.49  \n#>  3rd Qu.: 19.80   3rd Qu.:27.20  \n#>  Max.   : 28.90   Max.   :37.50\n```\n:::\n\n\n### x축에 표시할 눈금\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2022$일시 %>% head()\n#> [1] \"2022-01-01\" \"2022-01-02\" \"2022-01-03\" \"2022-01-04\" \"2022-01-05\"\n#> [6] \"2022-01-06\"\n\ndata_2022$일시 %>% tail()\n#> [1] \"2022-12-26\" \"2022-12-27\" \"2022-12-28\" \"2022-12-29\" \"2022-12-30\"\n#> [6] \"2022-12-31\"\n\ndate_s <- '2022-01-01' %>% as.Date('%Y-%m-%d')\ndate_e <- '2023-01-01' %>% as.Date('%Y-%m-%d')\n\nbreak_date <- seq.Date(date_s, date_e, by='3 month')\nbreak_date\n#> [1] \"2022-01-01\" \"2022-04-01\" \"2022-07-01\" \"2022-10-01\" \"2023-01-01\"\n\n### 월만 문자 값으로 뽑아내기\ndate_lab <- format(break_date, '%B')\ndate_lab\n#> [1] \"1월\"  \"4월\"  \"7월\"  \"10월\" \"1월\"\n```\n:::\n\n\n### Figure 2.3 ggplot + 축 설정\n- 사용 데이터셋 : data_2022\n- x=일시, y=평균기온..C.\n- color : 지점명 별\n- scale_x_date\n  - 이름 : 월\n  - 간격 : break_date (3개월)\n  - 간격 라벨 (1월 ~ 1월)\n- scale_y_continuous\n  - 이름 : 평균기온\n- labs : 제목, 부제목\n- 테마 : 밝게\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### 축 값 지정하기 전 컬럼이름 파악\ndata_2022 %>% names()\n#> [1] \"지점\"         \"지점명\"       \"일시\"         \"평균기온..C.\" \"최저기온..C.\"\n#> [6] \"최고기온..C.\"\n\nggplot(data_2022, aes(x=일시, y=평균기온..C., color=지점명)) +\n  geom_smooth(linewidth = 1.1,se=F,span=0.08) + # linewidth (선 두께), geom_line → smooth 가능\n  scale_x_date(name = '월',                     # se : 테두리, span : 스무스 정도\n               breaks = break_date,\n               labels = date_lab) +\n  scale_y_continuous(name = '평균기온') +\n  labs(title = '2022년 평균온도', subtitle = '7개 지점 관측') +\n  theme_light()\n#> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n\n::: {.cell-output-display}\n![](CH2_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n### Figure 2.4 그래프 데이터셋 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2022 %>% names()\n#> [1] \"지점\"         \"지점명\"       \"일시\"         \"평균기온..C.\" \"최저기온..C.\"\n#> [6] \"최고기온..C.\"\n\ndata_2022 %>% head()\n#>   지점 지점명       일시 평균기온..C. 최저기온..C. 최고기온..C.\n#> 1  108   서울 2022-01-01         -4.3        -10.2          2.3\n#> 2  108   서울 2022-01-02         -1.3         -5.2          3.0\n#> 3  108   서울 2022-01-03         -1.9         -8.0          2.5\n#> 4  108   서울 2022-01-04         -2.5         -5.6          1.0\n#> 5  108   서울 2022-01-05         -2.8         -7.8          1.9\n#> 6  108   서울 2022-01-06         -2.2         -5.9          3.3\n\ndata_2022_month <- data_2022 %>%\n  mutate(month = format(일시, '%B')) %>%    # 일시에서 월만 뽑아낸 month 컬럼 생성\n  group_by(지점명, month) %>%               # 지점명, month로 그룹화\n  summarise(mean = mean(평균기온..C.)) %>%  # 그룹화된 데이터의 집계값 요약\n  ungroup() %>%                            # 그룹화를 해제하여 일반적인 데이터 프레임 형태로 사용\n  mutate(month = factor(month,             # month값을 factor 형태로 수정해서 원하는 levels 지정가능\n                        levels = paste(1:12, '월',sep = ''))) # sep='' : 간격없이 붙이기\n#> `summarise()` has grouped output by '지점명'. You can override using the\n#> `.groups` argument.\n\ndata_2022_month\n#> # A tibble: 84 × 3\n#>    지점명 month  mean\n#>    <chr>  <fct> <dbl>\n#>  1 고산   10월  18.0 \n#>  2 고산   11월  15.5 \n#>  3 고산   12월   7.28\n#>  4 고산   1월    6.08\n#>  5 고산   2월    5.24\n#>  6 고산   3월   10.8 \n#>  7 고산   4월   14.8 \n#>  8 고산   5월   18.1 \n#>  9 고산   6월   22.1 \n#> 10 고산   7월   27.0 \n#> # … with 74 more rows\n```\n:::\n\n\n### Figure 2.4 ggplot + geom_tile + fill color\n- 사용 데이터셋 : data_2022_month\n- x=month, y=지점명\n- fill : mean(평균온도)\n- geom_tile : 넓이, 높이 지정\n- scale_fill_viridis_c\n  - 이름 : temperature\n  - 옵션 : B (밝기)\n  - begin, end : 색상의 시작,끝\n- coord_fixed\n  - expand = F : 공백 제거\n- ylab(NULL) : y축 이름 제거\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data_2022_month, aes(x = month, y = 지점명, fill = mean)) +\n  geom_tile(width = 0.95, height = 0.95) +\n  scale_fill_viridis_c(option = 'B', begin = 0.15, end =  0.98,\n                       name = 'temperature') +\n  coord_fixed(expand = FALSE) +\n  ylab(NULL) # ylab('')\n```\n\n::: {.cell-output-display}\n![](CH2_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "CH2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}