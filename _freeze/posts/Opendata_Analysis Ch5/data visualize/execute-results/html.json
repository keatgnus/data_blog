{
  "hash": "0b88eed63a90b517e05bb385dc5ced03",
  "result": {
    "markdown": "---\ntitle: \"Opendata_Analysis CH5\"\nauthor: \"Seongtaek\"\ndate: \"2023-04-16\"\ncategories: [code, opendata_analysis, rstudio]\nimage: \"data_visualization.jpg\"\ntoc: true\ntoc-depth: 4\nnumber-sections: true\n---\n\n\n<table align=\"bottom\">\n  <td>\n    <a target=\"_blank\" href=\"data-visualize.html\"><img\n    src = r_logo.png />HTML파일로 보기</a>\n  </td>\n</table>\n\nData Visualization\n\n## 오픈데이터 분석 실습 : Data Visualization\n\n### 패키지 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n```\n:::\n\n\n### 데이터 불러오기\n- mpg (자동차 정보 데이터셋)\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 11\n  manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class \n  <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr> \n1 audi         a4      1.8  1999     4 auto(l5)   f        18    29 p     compa…\n2 audi         a4      1.8  1999     4 manual(m5) f        21    29 p     compa…\n3 audi         a4      2    2008     4 manual(m6) f        20    31 p     compa…\n4 audi         a4      2    2008     4 auto(av)   f        21    30 p     compa…\n5 audi         a4      2.8  1999     6 auto(l5)   f        16    26 p     compa…\n6 audi         a4      2.8  1999     6 manual(m5) f        18    26 p     compa…\n```\n:::\n\n```{.r .cell-code}\n### 차원 파악\nmpg %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 234  11\n```\n:::\n:::\n\n### 가정\n- 엔진이 큰 차는 엔진이 작은 차보다 연료를 더 많이 사용하는가\n  - displ : 엔진의 크기\n  - hwy : 연비\n  \n### ggplot 생성\n- geom_point : 점 찍기\n  - x축 : 엔진 크기\n  - y축 : 연비\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy))\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### 더 간단한 코드\nggplot(mpg) + \n  geom_point(aes(displ,hwy))\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## 심미적 mapping\n\n\n### 포인트 색상 지정\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### class별 색상 지정\ntable(mpg$class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   2seater    compact    midsize    minivan     pickup subcompact        suv \n         5         47         41         11         33         35         62 \n```\n:::\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy, color = class)) # col='blue' (통일된 색상)\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### 포인트 사이즈 지정\n- 단점 : 구별 어려움\n\n::: {.cell}\n\n```{.r .cell-code}\n### class 별 크기 지정\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy, size = class))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using size for a discrete variable is not advised.\n```\n:::\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### 포인트 투명성 제어\n- 단점 : 구별 어려움\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy, alpha = class))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using alpha for a discrete variable is not advised.\n```\n:::\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### 포인트 모양 변경\n- 단점 : 최대 6가지 모양만 보임\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy, shape = class))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The shape palette can deal with a maximum of 6 discrete values because\nmore than 6 becomes difficult to discriminate; you have 7. Consider\nspecifying shapes manually if you must have them.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 62 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## 면\n\n###  facet_wrap()\n- 패널plot 생성\n\n::: {.cell}\n\n```{.r .cell-code}\n### class별 2행의 패널\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy)) + \n  facet_wrap(~ class, nrow = 2)\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### facet_grid()\n- 두 개 이상의 변수에 대해 그리드형태의 패널plot 생성\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(mpg$drv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  4   f   r \n103 106  25 \n```\n:::\n\n```{.r .cell-code}\ntable(mpg$cyl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n 4  5  6  8 \n81  4 79 70 \n```\n:::\n\n```{.r .cell-code}\nggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy)) + \n  facet_grid(drv ~ cyl) # facet 하지 않으려면 변수 대신 마침표 사용가능\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## 기하학적 객체\n\n### geom_smooth\n- 스무스한 선\n\n::: {.cell}\n\n```{.r .cell-code}\n### linetype = drv : drv에 따른 라인 구분\nggplot(mpg) + \n  geom_smooth(aes(x = displ, y = hwy,linetype = drv))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### 점, 컬러 추가\nggplot(mpg,aes(x=displ,\n               y=hwy,\n               color=drv)) +\n  geom_point() +\n  geom_smooth(aes(linetype=drv))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### 그룹화만 했을 경우\nggplot(mpg) +\n  geom_smooth(aes(x=displ, y=hwy, group = drv))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### 선 색상으로 구분 + 범례 미표기\nggplot(mpg) +\n  geom_smooth(aes(x=displ, y=hwy, color = drv),\n              show.legend = F)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### 선/색상/점 모두 구분\nggplot(mpg, aes(x=displ, y=hwy)) +\n  geom_point(aes(color= class)) +\n  geom_smooth(aes(linetype = class))\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### 특정 데이터 필터링\n### se=F : 회귀선의 표준오차 미표시\nggplot(mpg, aes(x=displ, y=hwy)) +\n  geom_point(aes(color= class)) +\n  geom_smooth(data = mpg %>% filter(class == 'subcompact'),se=F) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n## 통계적 변환\n\n### 데이터셋 파악\n- diamonds\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# … with 53,930 more rows\n```\n:::\n\n```{.r .cell-code}\n### 특정 컬럼 빈도수\ndiamonds$cut %>% table()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n.\n     Fair      Good Very Good   Premium     Ideal \n     1610      4906     12082     13791     21551 \n```\n:::\n:::\n\n\n### 데이터 시각화\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### 특정 컬럼 빈도수 시각화\nggplot(diamonds) +\n  geom_bar(aes(x=cut)) # stat_count와 동일\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n### 세부 조정\n- position\n\n::: {.cell}\n\n```{.r .cell-code}\n### 막대그래프 색상 조정 color= cut\nggplot(diamonds) +\n  geom_bar(aes(x=cut, color= cut))\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### 막대그래프 색상 조정 fill= cut\nggplot(diamonds) +\n  geom_bar(aes(x=cut, fill= cut))\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### 막대그래프 색상 조정 fill= clarity\n### x축에 대해서 색상 조정 가능\nggplot(diamonds) +\n  geom_bar(aes(x=cut, fill= clarity))\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### 투명도 + identity: 막대 안겹치게 포지셔닝\nggplot(diamonds, aes(x=cut, fill=clarity)) +\n  geom_bar(alpha=1/5, position = \"identity\")\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### 채움색상 NA(투명) \nggplot(diamonds, aes(x=cut, color=clarity)) +\n  geom_bar(fill=NA, position = \"identity\")\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### fill : 전체높이에 대한 비율 표현 → 상대적 비교 가능\nggplot(diamonds) +\n  geom_bar(aes(x=cut, fill=clarity), position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### dodge : 비교선상의 막대 나란히 배열\nggplot(diamonds) +\n  geom_bar(aes(x=cut, fill=clarity), position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n### Quiz 1\n다이아몬드 cut이 Ideal인 다이아몬드 중애서 Clarity가 IF인 비율은 얼마인가?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = diamonds %>% filter(cut == 'Ideal')) +\n  geom_bar(aes(x=cut, fill=clarity), position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n\n```{.r .cell-code}\n### 다이아몬드 cut이 Ideal인 다이아몬드 중애서 Clarity가 IF인 비율\n(diamonds %>% filter(cut == 'Ideal', clarity==\"IF\") %>% nrow)/(diamonds %>% filter(cut==\"Ideal\") %>% \n                                                                nrow)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.05623869\n```\n:::\n:::\n\n\n### Quiz 2\n\n다이아몬드 cut 등급별로, clarity의 비율이 나오도록 데이터프레임을 가공해봅시다\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>%\n  group_by(cut, clarity) %>%\n  summarize(n=n()) %>%\n  mutate(total = sum(n), prop = n/total) %>%\n  select(-n) %>%\n  pivot_wider(names_from = clarity, values_from = prop)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'cut'. You can override using the `.groups`\nargument.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 10\n# Groups:   cut [5]\n  cut       total      I1   SI2   SI1   VS2   VS1   VVS2   VVS1      IF\n  <ord>     <int>   <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl>   <dbl>\n1 Fair       1610 0.130   0.289 0.253 0.162 0.106 0.0429 0.0106 0.00559\n2 Good       4906 0.0196  0.220 0.318 0.199 0.132 0.0583 0.0379 0.0145 \n3 Very Good 12082 0.00695 0.174 0.268 0.214 0.147 0.102  0.0653 0.0222 \n4 Premium   13791 0.0149  0.214 0.259 0.243 0.144 0.0631 0.0447 0.0167 \n5 Ideal     21551 0.00677 0.121 0.199 0.235 0.167 0.121  0.0950 0.0562 \n```\n:::\n:::\n\n\n\n\n### jitter\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### jitter : 점 뿌리기\nggplot(mpg) +\n  geom_point(aes(x=displ, y=hwy), position = 'jitter')\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(mpg) +\n  geom_jitter(aes(x=displ, y= hwy))\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-28-2.png){width=672}\n:::\n:::\n\n\n\n\n\n\n### 세부 조정2\n- coord\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### boxplot\nggplot(mpg) +\n  geom_boxplot(aes(x=class, y=hwy))\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n\n```{.r .cell-code}\n### 색상 지정 가능\nggplot(mpg) +\n  geom_boxplot(aes(x=class,y=hwy, fill = class))\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-29-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### coord_flip : x축, y축 변경\nggplot(mpg) +\n  geom_boxplot(aes(x=class, y=hwy)) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"maps\")\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'maps'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:purrr':\n\n    map\n```\n:::\n\n```{.r .cell-code}\n### maps 패키지의 데이터셋 저장/생성\nnz <- map_data(\"nz\")\nnz %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      long       lat group order        region subregion\n1 172.7433 -34.44215     1     1 North.Island       <NA>\n2 172.7983 -34.45562     1     2 North.Island       <NA>\n3 172.8528 -34.44846     1     3 North.Island       <NA>\n4 172.8986 -34.41786     1     4 North.Island       <NA>\n5 172.9593 -34.42503     1     5 North.Island       <NA>\n6 173.0184 -34.39895     1     6 North.Island       <NA>\n```\n:::\n\n```{.r .cell-code}\n### geom_polygon : 지도 형식 시각화\nggplot(nz, aes(x=long, y=lat, group=group)) +\n  geom_polygon(fill=\"white\", color=\"black\")\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### coord_quickmap : 가로 세율 비율 보존 (정확한 지도)\nggplot(nz, aes(x=long, y=lat, group=group)) +\n  geom_polygon(fill=\"white\", color=\"black\") +\n  coord_quickmap()\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbar <- ggplot(diamonds) +\n  geom_bar(aes(x=cut, fill=cut),\n           show.legend = F,\n           width = 1) +\n  theme(aspect.ratio = 1) + # 그래프 가로:세로 비율\n  labs(x=NULL, y=NULL)\n\nbar\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### coord_polar : 원형 막대 그래프\nbar + coord_polar()\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n\n\n## Quiz\n- geoom_errorbar\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### 차종에 따라서 고속도로에서 연비차이가 날까?\n\n### errorbar로 연비 범위(평균-표준오차, 평균+표준오차) 구하기\nmpg %>% \n  group_by(class) %>% \n  summarise(mean_hwy = mean(hwy), sd_hwy = sd(hwy)) %>% \n  ggplot(aes(x=class, y=mean_hwy, fill=class)) +\n  geom_bar(stat = \"identity\") +\n  geom_errorbar(aes(ymin = mean_hwy - sd_hwy, ymax = mean_hwy + sd_hwy),\n                width = 0.5,\n                position = position_dodge(width = 0.9),\n                color = \"black\")\n```\n\n::: {.cell-output-display}\n![](data-visualize_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "data-visualize_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}