{
  "hash": "9906f1fe9169ca893825fc79e8cb471f",
  "result": {
    "markdown": "---\ntitle: \"Data_Visualize CH4\"\nauthor: \"Seongtaek\"\ndate: \"2023-04-05\"\ncategories: [code, data_visualize, rstudio]\nimage: \"ggplot.jpg\"\ntoc: true\ntoc-depth: 3\nnumber-sections: true\n---\n\n\n<table align=\"bottom\">\n  <td>\n    <a target=\"_blank\" href=\"figure-3.5-~-3.6.html\"><img\n    src = r_logo.png />HTML파일로 보기</a>\n  </td>\n</table>\n\nFigure 3.5, Figure 3.6\n\n\n\n\n\n## 데이터 시각화 실습 : Figure 3.5, Figure 3.6\n\n### 패키지 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n#> \n#> Attaching package: 'dplyr'\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\nlibrary(ggrepel) # geom_text_repel()\n```\n:::\n\n\n### 데이터 불러오기, 파악\n- US_census.csv (미국 인구 통계정보 데이터셋)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nUS_census <- read.csv('C:/Users/seong taek/Desktop/3-1 DataVisualize/data_visualize/US_census.csv')\n\n### 차원 파악\nUS_census %>% dim()\n#> [1] 3143   53\n\n### 앞부분 훑어보기\nUS_census %>% head(2)\n#>     state           name FIPS pop2010 pop2000 age_under_5 age_under_18\n#> 1 Alabama Autauga County 1001   54571   43671         6.6         26.8\n#> 2 Alabama Baldwin County 1003  182265  140415         6.1         23.0\n#>   age_over_65 female white black native asian pac_isl two_plus_races hispanic\n#> 1        12.0   51.3  78.5  17.7    0.4   0.9      NA            1.6      2.4\n#> 2        16.8   51.1  85.7   9.4    0.7   0.7      NA            1.5      4.4\n#>   white_not_hispanic no_move_in_one_plus_year foreign_born\n#> 1               77.2                     86.3          2.0\n#> 2               83.5                     83.0          3.6\n#>   foreign_spoken_at_home hs_grad bachelors veterans mean_work_travel\n#> 1                    3.7    85.3      21.7     5817             25.1\n#> 2                    5.5    87.6      26.8    20396             25.8\n#>   housing_units home_ownership housing_multi_unit median_val_owner_occupied\n#> 1         22135           77.5                7.2                    133900\n#> 2        104061           76.7               22.6                    177200\n#>   households persons_per_household per_capita_income median_household_income\n#> 1      19718                   2.7             24568                   53255\n#> 2      69476                   2.5             26469                   50147\n#>   poverty private_nonfarm_establishments private_nonfarm_employment\n#> 1    10.6                            877                      10628\n#> 2    12.2                           4812                      52233\n#>   percent_change_private_nonfarm_employment nonemployment_establishments firms\n#> 1                                      16.6                         2971  4067\n#> 2                                      17.4                        14175 19035\n#>   black_owned_firms native_owned_firms asian_owned_firms pac_isl_owned_firms\n#> 1              15.2                 NA               1.3                  NA\n#> 2               2.7                0.4               1.0                  NA\n#>   hispanic_owned_firms women_owned_firms manufacturer_shipments_2007\n#> 1                  0.7              31.7                          NA\n#> 2                  1.3              27.3                     1410273\n#>   mercent_whole_sales_2007   sales sales_per_capita accommodation_food_service\n#> 1                       NA  598175            12003                      88157\n#> 2                       NA 2966489            17166                     436955\n#>   building_permits fed_spending    area density\n#> 1              191       331142  594.44    91.8\n#> 2              696      1119082 1589.78   114.6\n\n### 일부 통계 요약 정보\nUS_census %>% summary() %>% head(2)\n#>     state               name                FIPS          pop2010       \n#>  Length:3143        Length:3143        Min.   : 1001   Min.   :     82  \n#>  Class :character   Class :character   1st Qu.:18178   1st Qu.:  11104  \n#>     pop2000         age_under_5      age_under_18    age_over_65   \n#>  Min.   :     67   Min.   : 0.000   Min.   : 0.00   Min.   : 3.50  \n#>  1st Qu.:  11210   1st Qu.: 5.500   1st Qu.:21.40   1st Qu.:13.10  \n#>      female          white           black            native      \n#>  Min.   :27.90   Min.   : 2.70   Min.   : 0.000   Min.   : 0.000  \n#>  1st Qu.:49.60   1st Qu.:75.25   1st Qu.: 0.500   1st Qu.: 0.200  \n#>      asian           pac_isl       two_plus_races      hispanic     \n#>  Min.   : 0.000   Min.   : 0.000   Min.   : 0.100   Min.   : 0.000  \n#>  1st Qu.: 0.300   1st Qu.: 0.000   1st Qu.: 1.100   1st Qu.: 1.600  \n#>  white_not_hispanic no_move_in_one_plus_year  foreign_born   \n#>  Min.   : 2.70      Min.   : 51.6            Min.   : 0.000  \n#>  1st Qu.:66.95      1st Qu.: 83.2            1st Qu.: 1.200  \n#>  foreign_spoken_at_home    hs_grad        bachelors        veterans     \n#>  Min.   : 0.000         Min.   :47.90   Min.   : 3.70   Min.   :     0  \n#>  1st Qu.: 2.800         1st Qu.:78.40   1st Qu.:13.10   1st Qu.:   958  \n#>  mean_work_travel housing_units     home_ownership  housing_multi_unit\n#>  Min.   : 4.30    Min.   :     50   Min.   : 0.00   Min.   : 0.00     \n#>  1st Qu.:19.00    1st Qu.:   5416   1st Qu.:69.50   1st Qu.: 6.10     \n#>  median_val_owner_occupied   households      persons_per_household\n#>  Min.   :      0           Min.   :     22   Min.   :1.100        \n#>  1st Qu.:  80200           1st Qu.:   4260   1st Qu.:2.370        \n#>  per_capita_income median_household_income    poverty    \n#>  Min.   : 7772     Min.   : 19351          Min.   : 0.0  \n#>  1st Qu.:19030     1st Qu.: 36952          1st Qu.:11.0  \n#>  private_nonfarm_establishments private_nonfarm_employment\n#>  Min.   :     0                 Min.   :      0           \n#>  1st Qu.:   229                 1st Qu.:   2109           \n#>  percent_change_private_nonfarm_employment nonemployment_establishments\n#>  Min.   :-83.2000                          Min.   :    21              \n#>  1st Qu.:-12.0000                          1st Qu.:   729              \n#>      firms         black_owned_firms native_owned_firms asian_owned_firms\n#>  Min.   :     27   Min.   : 0.200    Min.   : 0.200     Min.   : 0.300   \n#>  1st Qu.:   1074   1st Qu.: 2.100    1st Qu.: 0.525     1st Qu.: 1.400   \n#>  pac_isl_owned_firms hispanic_owned_firms women_owned_firms\n#>  Min.   : 0.0000     Min.   : 0.300       Min.   : 6.50    \n#>  1st Qu.: 0.1000     1st Qu.: 1.400       1st Qu.:22.70    \n#>  manufacturer_shipments_2007 mercent_whole_sales_2007     sales          \n#>  Min.   :        0           Min.   :        0        Min.   :        0  \n#>  1st Qu.:        0           1st Qu.:    42125        1st Qu.:    79988  \n#>  sales_per_capita accommodation_food_service building_permits\n#>  Min.   :    0    Min.   :       0           Min.   :    0   \n#>  1st Qu.: 6993    1st Qu.:    9349           1st Qu.:    5   \n#>   fed_spending           area             density       \n#>  Min.   :       0   Min.   :     2.0   Min.   :    0.0  \n#>  1st Qu.:  102922   1st Qu.:   430.7   1st Qu.:   16.9\n\n### 일부 컬럼 클래스(타입) 확인\nUS_census %>% sapply(class) %>% head()\n#>       state        name        FIPS     pop2010     pop2000 age_under_5 \n#> \"character\" \"character\"   \"integer\"   \"integer\"   \"integer\"   \"numeric\"\n\n### 일부 컬럼 자료형 확인\nUS_census %>% sapply(typeof) %>% head()\n#>       state        name        FIPS     pop2010     pop2000 age_under_5 \n#> \"character\" \"character\"   \"integer\"   \"integer\"   \"integer\"    \"double\"\n```\n:::\n\n\n### 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Texas주의 인구 밀도가 높은 상위3개, 하위3개, 나머지의 랜덤한 지역 d.f 만들기\ntx_counties <- US_census %>%\n  filter(state == 'Texas') %>%             # Texas지역만 필터\n  select(name, pop2010) %>%                # name,pop2010 열만 선택\n  mutate(county = gsub(' County','',name), # name 열에서 County문자열을 공백으로 대체하고 county열 생성\n         popratio = pop2010/median(pop2010)) %>% # pop2010 값에서 pop2010의 중앙값을 나눈 비율을 popratio열로 생성\n  arrange(desc(popratio)) %>%              # popratio 열을 내림차순 정렬\n  mutate(index = 1:n(),\n         label = ifelse(index<=3 | index > n()-3 | runif(n()) < .04, county,'')) \n# index값이 3이하, 행의 수에서 3을 뺀 값보다 크거나, 0,1사이의 값을 뽑아 0.04보다 작으면 'county'값을 가지고 그렇지 않으면 ''(빈문자열) 값 가짐\n\ntx_counties %>% head()\n#>             name pop2010  county  popratio index   label\n#> 1  Harris County 4092459  Harris 222.64616     1  Harris\n#> 2  Dallas County 2368139  Dallas 128.83624     2  Dallas\n#> 3 Tarrant County 1809034 Tarrant  98.41869     3 Tarrant\n#> 4   Bexar County 1714773   Bexar  93.29052     4        \n#> 5  Travis County 1024266  Travis  55.72417     5        \n#> 6 El Paso County  800647 El Paso  43.55840     6\n```\n:::\n\n\n## Figure 3.5\n- 사용 데이터셋 : tx_counties\n- x = index, y = popratio\n- geom_hline\n  - 수평선 위치 : 0\n  - 라인 종류 : 2 (눈금)\n  - 색상 'grey40'\n- geom_point\n  - 점 크기 : 1\n  - 점 색상 : 'royalblue'\n- geom_text_repel\n  - 라벨 : 'label'\n  - 라벨과 지점 사이 선의 최소 길이 : 0\n  - 겹치는 라벨 제어의 최대 수  : 100\n- 테마 : 밝게\n- 플롯 영역의 테두리(border) 제거\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tx_counties, aes(x=index, y=popratio)) +\n  geom_hline(yintercept = 0,linetype=2, color = 'grey40') +\n  geom_point(size=1, color='royalblue')  +\n  geom_text_repel(aes(label=label),\n                  min.segment.length = 0,\n                  max.overlaps = 100) +\n  theme_light() +\n  theme(panel.border = element_blank())\n```\n\n::: {.cell-output-display}\n![](figure-3.5-~-3.6_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Fugiure 3.6\n- 사용 데이터셋 : tx_counties\n- x = index, y = popratio\n- geom_hline\n  - 수평선 위치 : 1\n  - 라인 종류 : 2 (눈금)\n  - 색상 'grey40'\n- geom_point\n  - 점 크기 : 1\n  - 점 색상 : 'royalblue'\n- geom_text_repel\n  - 라벨 : 'label'\n  - 라벨과 지점 사이 선의 최소 길이 : 0\n  - 겹치는 라벨 제어의 최대 수  : 100\n- scale_y_log10\n  - y축 이름\n  - y축 간격\n  - y축 간격 라벨 : label_log10\n- scale_x_continuous\n  - x축 이름\n  - x축 간격 : NULL (자동)\n- 테마 : 밝게\n- 플롯 영역의 테두리(border) 제거\n\n::: {.cell}\n\n```{.r .cell-code}\n### -2부터 2까지의 지수값을 포함하는 문자열을 표현식으로 생성\nlabel_log10 <- sapply(-2:2,function(i) as.expression(bquote(10^ .(i))))\nlabel_log10\n#> expression(10^-2L, 10^-1L, 10^0L, 10^1L, 10^2L)\n\nggplot(tx_counties, aes(x = index, y = popratio)) +\n  geom_hline(yintercept = 1,linetype = 2, color = 'grey40') +\n  geom_point(size = 1, color = 'royalblue')  +\n  geom_text_repel(aes(label=label),\n                  min.segment.length = 0,\n                  max.overlaps = 100) +\n  scale_y_log10(name='population number / median',\n                breaks = 10^(-2:2),\n                labels= label_log10) +\n  scale_x_continuous(name = 'Texas counties , from most to least populous',\n                     breaks = NULL) +\n  theme_light() +\n  theme(panel.border = element_blank())\n```\n\n::: {.cell-output-display}\n![](figure-3.5-~-3.6_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n## 예제\n- 2023년 시군구 인구수 Figure 3.6\n\n### 데이터 불러오기, 파악\n- 행정구역 시군구 별 주민등록세대수.csv (2022.11 ~ 2023.02)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_202302 <- read.csv('C:/Users/seong taek/Desktop/3-1 DataVisualize/data_visualize/행정구역_시군구_별_주민등록세대수_202302.csv')\n\n### 차원 파악\ndata_202302 %>% dim()\n#> [1] 274   5\n\n### 앞부분 훑어보기\ndata_202302 %>% head()\n#>   행정구역.시군구.별 X2022.11 X2022.12 X2023.01 X2023.02\n#> 1             종로구    72666    72524    72479    72773\n#> 2               중구    63167    63139    63123    63492\n#> 3             용산구   109905   109805   109734   109778\n#> 4             성동구   133435   133305   133293   133517\n#> 5             광진구   169376   169291   169416   169648\n#> 6           동대문구   170154   169873   169716   170766\n\n### 통계 요약 정보\ndata_202302 %>% summary()\n#>  행정구역.시군구.별    X2022.11         X2022.12         X2023.01     \n#>  Length:274         Min.   :     0   Min.   :     0   Min.   :     0  \n#>  Class :character   1st Qu.: 26391   1st Qu.: 26590   1st Qu.: 26546  \n#>  Mode  :character   Median : 81122   Median : 81158   Median : 81177  \n#>                     Mean   :101197   Mean   :101227   Mean   :101274  \n#>                     3rd Qu.:145260   3rd Qu.:145426   3rd Qu.:145706  \n#>                     Max.   :528097   Max.   :528482   Max.   :529082  \n#>     X2023.02     \n#>  Min.   :     0  \n#>  1st Qu.: 26522  \n#>  Median : 81243  \n#>  Mean   :101442  \n#>  3rd Qu.:146308  \n#>  Max.   :530462\n\n### 컬럼 클래스(타입) 확인\ndata_202302 %>% sapply(class) \n#> 행정구역.시군구.별           X2022.11           X2022.12           X2023.01 \n#>        \"character\"          \"integer\"          \"integer\"          \"integer\" \n#>           X2023.02 \n#>          \"integer\"\n\n### 컬럼 자료형 확인\ndata_202302 %>% sapply(typeof)\n#> 행정구역.시군구.별           X2022.11           X2022.12           X2023.01 \n#>        \"character\"          \"integer\"          \"integer\"          \"integer\" \n#>           X2023.02 \n#>          \"integer\"\n```\n:::\n\n### 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_202302_second <- data_202302 %>%\n  filter(X2023.02 != 0) %>%                        # 0값이 아닌것만 필터링\n  select(행정구역.시군구.별, X2023.02) %>%         # 열 지정 선택        \n  mutate(popratio = X2023.02/median(X2023.02)) %>% # 새로운 컬럼 'popratio' \n  arrange(desc(popratio)) %>%                      # 내림차순 정렬\n  mutate(index = 1:n(),\n         label = ifelse(index<=5 | index > n()-5 | index==median(index), 행정구역.시군구.별,''))\n# index값이 5이하, 행의 수에서 5를 뺀 값보다 크거나, index가 중위수인 index이면 '행정구역.시군구.별' 값을 가지고 그렇지 않으면 ''(빈문자열) 값 가짐\n\ndata_202302_second %>% head()\n#>   행정구역.시군구.별 X2023.02 popratio index  label\n#> 1             수원시   530462 6.043498     1 수원시\n#> 2             고양시   462873 5.273464     2 고양시\n#> 3             창원시   456357 5.199228     3 창원시\n#> 4             용인시   432476 4.927154     4 용인시\n#> 5             성남시   409466 4.665003     5 성남시\n#> 6             청주시   394735 4.497175     6\n```\n:::\n\n\n### Fugiure 3.6\n- 사용 데이터셋 : data_202302_second\n- x = index, y = popratio\n- geom_hline\n  - 수평선 위치 : 1\n  - 라인 종류 : 2 (눈금)\n  - 색상 'grey40'\n- geom_point\n  - 점 크기 : 1\n  - 점 색상 : 'royalblue'\n- geom_text_repel\n  - 라벨 : 'label'\n  - 라벨과 지점 사이 선의 최소 길이 : 0\n  - 겹치는 라벨 제어의 최대 수  : 100\n- scale_y_log10\n  - y축 이름\n  - y축 간격\n  - y축 간격 라벨 : label_log10\n- scale_x_continuous\n  - x축 이름\n  - x축 간격 : NULL (자동)\n- 테마 : 밝게\n- 플롯 영역의 테두리(border) 제거\n\n::: {.cell}\n\n```{.r .cell-code}\n### -1부터 1까지의 지수값을 포함하는 문자열을 표현식으로 생성\nlabel_log10 <- sapply(-1:1,function(i) as.expression(bquote(10^ .(i))))\nlabel_log10\n#> expression(10^-1L, 10^0L, 10^1L)\n\nggplot(data_202302_second, aes(x = index, y = popratio)) +\n  geom_hline(yintercept = 1,linetype = 2, color = 'grey40') +\n  geom_point(size = 1, color = 'royalblue')  +\n  geom_text_repel(aes(label=label),\n                  min.segment.length = 0,\n                  max.overlaps = 100) +\n  scale_y_log10(name='인구 수/중위수',\n                breaks = 10^(-1:1),\n                labels= label_log10) +\n  scale_x_discrete(name = '행정구역(시군구)별 주민등록세대수',\n                     breaks = NULL) +\n  theme_light() +\n  theme(panel.border = element_blank())\n```\n\n::: {.cell-output-display}\n![](figure-3.5-~-3.6_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "figure-3.5-~-3.6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}