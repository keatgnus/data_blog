{
  "hash": "9b288126a46cc54102229d41df611b19",
  "result": {
    "markdown": "---\ntitle: \"Spatial_Info_Analysis CH2\"\nauthor: \"Seongtaek\"\ndate: \"2023-04-22\"\ncategories: [code, Spatial_Info_Analysis, rstudio]\nimage: \"ch3.png\"\ntoc: true\ntoc-depth: 4\nnumber-sections: true\n---\n\n\n<table align=\"bottom\">\n  <td>\n    <a target=\"_blank\" href=\"공간정보분석-CH3.html\"><img\n    src = r_logo.png />HTML파일로 보기</a>\n  </td>\n</table>\n\n속성 데이터 - 벡터 & 래스터\n\n## 공간 정보 분석 CH3 : Attribute data operations\n\n## 패키지 불러오기 \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(raster)\nlibrary(dplyr)\nlibrary(stringr) # for working with strings (pattern matching)\nlibrary(tidyr)   # for unite() and separate()\nlibrary(spData)  # 데이터 세트를 로드\n```\n:::\n\n\n## 3.1 속성데이터 (벡터 vs 래스터)\n- 지리공간 벡터 데이터\n  - 점, 선, 면 등의 리스트로 이뤄진 지리공간 데이터\n  - 지리공간 데이터 제외한 속성데이터\n- sf 객체: 벡터 데이터에서 속성 정보 가져옴, 클래스 지원\n  - 속성 정보만 가져오기 : st_drop_geometry()\n  - base R 구문, dplyr : 벡더 데이터 속성 정보의 dim\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### sf 객체 methods\nmethods(class = 'sf') %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"$<-.sf\"       \"[.sf\"         \"[[<-.sf\"      \"aggregate.sf\" \"anti_join.sf\"\n[6] \"arrange.sf\"  \n```\n:::\n\n```{.r .cell-code}\nmethods(class = 'sf') %>% tail()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"summarise.sf\" \"transform.sf\" \"transmute.sf\" \"ungroup.sf\"   \"unite.sf\"    \n[6] \"unnest.sf\"   \n```\n:::\n\n```{.r .cell-code}\nlength(methods(class = 'sf'))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 123\n```\n:::\n:::\n\n\n## spData : 세계 나라 데이터(world)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### 10개의 속성 데이터, 1개의 지리기하 열\n\ndim(world)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 177  11\n```\n:::\n\n```{.r .cell-code}\nworld\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 11\n   iso_a2 name_l…¹ conti…² regio…³ subre…⁴ type  area_…⁵     pop lifeExp gdpPe…⁶\n * <chr>  <chr>    <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 FJ     Fiji     Oceania Oceania Melane… Sove…  1.93e4  8.86e5    70.0   8222.\n 2 TZ     Tanzania Africa  Africa  Easter… Sove…  9.33e5  5.22e7    64.2   2402.\n 3 EH     Western… Africa  Africa  Northe… Inde…  9.63e4 NA         NA       NA \n 4 CA     Canada   North … Americ… Northe… Sove…  1.00e7  3.55e7    82.0  43079.\n 5 US     United … North … Americ… Northe… Coun…  9.51e6  3.19e8    78.8  51922.\n 6 KZ     Kazakhs… Asia    Asia    Centra… Sove…  2.73e6  1.73e7    71.6  23587.\n 7 UZ     Uzbekis… Asia    Asia    Centra… Sove…  4.61e5  3.08e7    71.0   5371.\n 8 PG     Papua N… Oceania Oceania Melane… Sove…  4.65e5  7.76e6    65.2   3709.\n 9 ID     Indones… Asia    Asia    South-… Sove…  1.82e6  2.55e8    68.9  10003.\n10 AR     Argenti… South … Americ… South … Sove…  2.78e6  4.30e7    76.3  18798.\n# … with 167 more rows, 1 more variable: geom <MULTIPOLYGON [°]>, and\n#   abbreviated variable names ¹​name_long, ²​continent, ³​region_un, ⁴​subregion,\n#   ⁵​area_km2, ⁶​gdpPercap\n```\n:::\n\n```{.r .cell-code}\nnames(world)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"iso_a2\"    \"name_long\" \"continent\" \"region_un\" \"subregion\" \"type\"     \n [7] \"area_km2\"  \"pop\"       \"lifeExp\"   \"gdpPercap\" \"geom\"     \n```\n:::\n:::\n\n## sf 객체에서 속성 정보만 가져오기 : st_drop_geometry()\n\n- 점, 선, 면 등의 지리기하 데이터를 리스트로 갖는 geom 컬럼 항상 존재\n- geom 컬럼을 제거하고 나머지 속성 정보만으로 d.f 만들 때 사용\n- geom 컬럼 : 지리기하 리스트 정보를 가지기때문에 메모리 점유 큼\n- 사용할 필요 없으면 웬만하면 제거하기\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### geom 컬럼 제거\n\nworld_df = st_drop_geometry(world)\n\nworld_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 177 × 10\n   iso_a2 name_l…¹ conti…² regio…³ subre…⁴ type  area_…⁵     pop lifeExp gdpPe…⁶\n * <chr>  <chr>    <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 FJ     Fiji     Oceania Oceania Melane… Sove…  1.93e4  8.86e5    70.0   8222.\n 2 TZ     Tanzania Africa  Africa  Easter… Sove…  9.33e5  5.22e7    64.2   2402.\n 3 EH     Western… Africa  Africa  Northe… Inde…  9.63e4 NA         NA       NA \n 4 CA     Canada   North … Americ… Northe… Sove…  1.00e7  3.55e7    82.0  43079.\n 5 US     United … North … Americ… Northe… Coun…  9.51e6  3.19e8    78.8  51922.\n 6 KZ     Kazakhs… Asia    Asia    Centra… Sove…  2.73e6  1.73e7    71.6  23587.\n 7 UZ     Uzbekis… Asia    Asia    Centra… Sove…  4.61e5  3.08e7    71.0   5371.\n 8 PG     Papua N… Oceania Oceania Melane… Sove…  4.65e5  7.76e6    65.2   3709.\n 9 ID     Indones… Asia    Asia    South-… Sove…  1.82e6  2.55e8    68.9  10003.\n10 AR     Argenti… South … Americ… South … Sove…  2.78e6  4.30e7    76.3  18798.\n# … with 167 more rows, and abbreviated variable names ¹​name_long, ²​continent,\n#   ³​region_un, ⁴​subregion, ⁵​area_km2, ⁶​gdpPercap\n```\n:::\n\n```{.r .cell-code}\nclass(world_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n:::\n\n```{.r .cell-code}\nnames(world_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"iso_a2\"    \"name_long\" \"continent\" \"region_un\" \"subregion\" \"type\"     \n [7] \"area_km2\"  \"pop\"       \"lifeExp\"   \"gdpPercap\"\n```\n:::\n:::\n\n## Base R 구문으로 벡터 데이터 속성정보의 차원 가져오기\n\n- 행, 열 가져올때 df[i,j], subset() 등 활용\n  - i행, j열에는 정수로 위치 파악\n  - j열의 이름 사용\n  - 논리 벡터 사용가능 subset 등\n- dplyr 패키지 : select(), filter(), pull() 등\n_ 특정 행, 열의 부분집합 가져오면 끝에 geom 칼럼 따라옴\n\n#### 1. 위치 지정해서 지리공간 벡터 데이터 가져오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### 1행 ~ 6행 정보\nworld[1:6,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -18.28799 xmax: 180 ymax: 83.23324\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 11\n  iso_a2 name_long conti…¹ regio…² subre…³ type  area_…⁴     pop lifeExp gdpPe…⁵\n  <chr>  <chr>     <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n1 FJ     Fiji      Oceania Oceania Melane… Sove…  1.93e4  8.86e5    70.0   8222.\n2 TZ     Tanzania  Africa  Africa  Easter… Sove…  9.33e5  5.22e7    64.2   2402.\n3 EH     Western … Africa  Africa  Northe… Inde…  9.63e4 NA         NA       NA \n4 CA     Canada    North … Americ… Northe… Sove…  1.00e7  3.55e7    82.0  43079.\n5 US     United S… North … Americ… Northe… Coun…  9.51e6  3.19e8    78.8  51922.\n6 KZ     Kazakhst… Asia    Asia    Centra… Sove…  2.73e6  1.73e7    71.6  23587.\n# … with 1 more variable: geom <MULTIPOLYGON [°]>, and abbreviated variable\n#   names ¹​continent, ²​region_un, ³​subregion, ⁴​area_km2, ⁵​gdpPercap\n```\n:::\n\n```{.r .cell-code}\n### 1열 ~ 3열 정보\nworld[,1:3]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 4\n   iso_a2 name_long        continent                                        geom\n   <chr>  <chr>            <chr>                              <MULTIPOLYGON [°]>\n 1 FJ     Fiji             Oceania       (((-180 -16.55522, -179.9174 -16.50178…\n 2 TZ     Tanzania         Africa        (((33.90371 -0.95, 31.86617 -1.02736, …\n 3 EH     Western Sahara   Africa        (((-8.66559 27.65643, -8.817828 27.656…\n 4 CA     Canada           North America (((-132.71 54.04001, -133.18 54.16998,…\n 5 US     United States    North America (((-171.7317 63.78252, -171.7911 63.40…\n 6 KZ     Kazakhstan       Asia          (((87.35997 49.21498, 86.82936 49.8266…\n 7 UZ     Uzbekistan       Asia          (((55.96819 41.30864, 57.09639 41.3223…\n 8 PG     Papua New Guinea Oceania       (((141.0002 -2.600151, 141.0171 -5.859…\n 9 ID     Indonesia        Asia          (((104.37 -1.084843, 104.0108 -1.05921…\n10 AR     Argentina        South America (((-68.63401 -52.63637, -68.63335 -54.…\n# … with 167 more rows\n```\n:::\n:::\n\n\n#### 2. 열이름 사용해서 지리공간 벡터 데이터 열 가져오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworld[, c('name_long', 'lifeExp')]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 3\n   name_long        lifeExp                                                 geom\n   <chr>              <dbl>                                   <MULTIPOLYGON [°]>\n 1 Fiji                70.0 (((-180 -16.55522, -179.9174 -16.50178, -179.7933 -…\n 2 Tanzania            64.2 (((33.90371 -0.95, 31.86617 -1.02736, 30.76986 -1.0…\n 3 Western Sahara      NA   (((-8.66559 27.65643, -8.817828 27.65643, -8.794884…\n 4 Canada              82.0 (((-132.71 54.04001, -133.18 54.16998, -133.2397 53…\n 5 United States       78.8 (((-171.7317 63.78252, -171.7911 63.40585, -171.553…\n 6 Kazakhstan          71.6 (((87.35997 49.21498, 86.82936 49.82667, 85.54127 4…\n 7 Uzbekistan          71.0 (((55.96819 41.30864, 57.09639 41.32231, 56.93222 4…\n 8 Papua New Guinea    65.2 (((141.0002 -2.600151, 141.0171 -5.859022, 141.0339…\n 9 Indonesia           68.9 (((104.37 -1.084843, 104.0108 -1.059212, 103.4376 -…\n10 Argentina           76.3 (((-68.63401 -52.63637, -68.63335 -54.8695, -67.562…\n# … with 167 more rows\n```\n:::\n:::\n\n\n### 3. 논리 벡터 사용해서 데이터 가져오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_area <-  world$area_km2 < 10000\nsummary(sel_area)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Mode   FALSE    TRUE \nlogical     170       7 \n```\n:::\n\n```{.r .cell-code}\nsmall_countries <-  world[sel_area, ]\nsmall_countries\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 7 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -67.24243 ymin: -16.59785 xmax: 167.8449 ymax: 50.12805\nGeodetic CRS:  WGS 84\n# A tibble: 7 × 11\n  iso_a2 name_long conti…¹ regio…² subre…³ type  area_…⁴     pop lifeExp gdpPe…⁵\n  <chr>  <chr>     <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n1 PR     Puerto R… North … Americ… Caribb… Depe…   9225. 3534874    79.4  35066.\n2 PS     Palestine Asia    Asia    Wester… Disp…   5037. 4294682    73.1   4320.\n3 VU     Vanuatu   Oceania Oceania Melane… Sove…   7490.  258850    71.7   2892.\n4 LU     Luxembou… Europe  Europe  Wester… Sove…   2417.  556319    82.2  93655.\n5 <NA>   Northern… Asia    Asia    Wester… Sove…   3786.      NA    NA       NA \n6 CY     Cyprus    Asia    Asia    Wester… Sove…   6207. 1152309    80.2  29786.\n7 TT     Trinidad… North … Americ… Caribb… Sove…   7738. 1354493    70.4  31182.\n# … with 1 more variable: geom <MULTIPOLYGON [°]>, and abbreviated variable\n#   names ¹​continent, ²​region_un, ³​subregion, ⁴​area_km2, ⁵​gdpPercap\n```\n:::\n\n```{.r .cell-code}\nsmall_countries <- world[world$area_km2 < 10000, ]\nsmall_countries\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 7 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -67.24243 ymin: -16.59785 xmax: 167.8449 ymax: 50.12805\nGeodetic CRS:  WGS 84\n# A tibble: 7 × 11\n  iso_a2 name_long conti…¹ regio…² subre…³ type  area_…⁴     pop lifeExp gdpPe…⁵\n  <chr>  <chr>     <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n1 PR     Puerto R… North … Americ… Caribb… Depe…   9225. 3534874    79.4  35066.\n2 PS     Palestine Asia    Asia    Wester… Disp…   5037. 4294682    73.1   4320.\n3 VU     Vanuatu   Oceania Oceania Melane… Sove…   7490.  258850    71.7   2892.\n4 LU     Luxembou… Europe  Europe  Wester… Sove…   2417.  556319    82.2  93655.\n5 <NA>   Northern… Asia    Asia    Wester… Sove…   3786.      NA    NA       NA \n6 CY     Cyprus    Asia    Asia    Wester… Sove…   6207. 1152309    80.2  29786.\n7 TT     Trinidad… North … Americ… Caribb… Sove…   7738. 1354493    70.4  31182.\n# … with 1 more variable: geom <MULTIPOLYGON [°]>, and abbreviated variable\n#   names ¹​continent, ²​region_un, ³​subregion, ⁴​area_km2, ⁵​gdpPercap\n```\n:::\n\n```{.r .cell-code}\nsmall_countries <- subset(world, area_km2 < 10000)\nsmall_countries\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 7 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -67.24243 ymin: -16.59785 xmax: 167.8449 ymax: 50.12805\nGeodetic CRS:  WGS 84\n# A tibble: 7 × 11\n  iso_a2 name_long conti…¹ regio…² subre…³ type  area_…⁴     pop lifeExp gdpPe…⁵\n  <chr>  <chr>     <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n1 PR     Puerto R… North … Americ… Caribb… Depe…   9225. 3534874    79.4  35066.\n2 PS     Palestine Asia    Asia    Wester… Disp…   5037. 4294682    73.1   4320.\n3 VU     Vanuatu   Oceania Oceania Melane… Sove…   7490.  258850    71.7   2892.\n4 LU     Luxembou… Europe  Europe  Wester… Sove…   2417.  556319    82.2  93655.\n5 <NA>   Northern… Asia    Asia    Wester… Sove…   3786.      NA    NA       NA \n6 CY     Cyprus    Asia    Asia    Wester… Sove…   6207. 1152309    80.2  29786.\n7 TT     Trinidad… North … Americ… Caribb… Sove…   7738. 1354493    70.4  31182.\n# … with 1 more variable: geom <MULTIPOLYGON [°]>, and abbreviated variable\n#   names ¹​continent, ²​region_un, ³​subregion, ⁴​area_km2, ⁵​gdpPercap\n```\n:::\n:::\n\n\n## dplyr 패키지로 벡터 데이터 속성정보 차원 가져오기\n\n- 가독성 좋고 속도 빠름\n- 체인 (%>%) 사용가능\n- select(), slice(), filter(), pull() 등의 함수 사용가능\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### select로 강력하게 지정가능\n\n# 선택지정\nworld1 <- select(world, name_long, pop)\nnames(world1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"name_long\" \"pop\"       \"geom\"     \n```\n:::\n\n```{.r .cell-code}\n# 범위지정\nworld2 <- select(world, name_long:pop)\nnames(world2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"name_long\" \"continent\" \"region_un\" \"subregion\" \"type\"      \"area_km2\" \n[7] \"pop\"       \"geom\"     \n```\n:::\n\n```{.r .cell-code}\n# 컬럼 번호로 선택지정\nworld3 <- select(world,2,7)\nnames(world3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"name_long\" \"area_km2\"  \"geom\"     \n```\n:::\n\n```{.r .cell-code}\n# 특정 컬럼 제외\nworld4 <- select(world, -subregion, -area_km2)\nnames(world4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"iso_a2\"    \"name_long\" \"continent\" \"region_un\" \"type\"      \"pop\"      \n[7] \"lifeExp\"   \"gdpPercap\" \"geom\"     \n```\n:::\n\n```{.r .cell-code}\n# 컬럼 이름 재설정\nworld5 <- select(world, name_long, population = pop)\nnames(world5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"name_long\"  \"population\" \"geom\"      \n```\n:::\n\n```{.r .cell-code}\n# 특정 단어가 포함된 열 추출\nworld6 <- select(world, contains('Ex')) \nnames(world6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"lifeExp\" \"geom\"   \n```\n:::\n\n```{.r .cell-code}\n# 특정 단어로 시작하는 열 추출\nworld7  <- select(world, starts_with('life')) \nnames(world7)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"lifeExp\" \"geom\"   \n```\n:::\n\n```{.r .cell-code}\n# 특정 단어로 끝나는 열 추출\nworld8 <-  select(world, ends_with('Exp')) \nnames(world8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"lifeExp\" \"geom\"   \n```\n:::\n\n```{.r .cell-code}\n# 특정 단어의 소문자 or 대문자 포함된 열 추출\nworld9 <-  select(world, matches(\"[p]\")) \nnames(world9)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"type\"      \"pop\"       \"lifeExp\"   \"gdpPercap\" \"geom\"     \n```\n:::\n\n```{.r .cell-code}\n### num_range() 함수\nx1 <- c(1:5) \nx2 <- c(6:10) \nx3 <- c(11:15) \nx4 <- c(16:20) \nx5 <- c(21:25)\ndf <- data.frame(x1, x2, x3, x4, x5) \ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  x1 x2 x3 x4 x5\n1  1  6 11 16 21\n2  2  7 12 17 22\n3  3  8 13 18 23\n4  4  9 14 19 24\n5  5 10 15 20 25\n```\n:::\n\n```{.r .cell-code}\ndf2 <- select(df, num_range(\"x\", 1:3))\ndf2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  x1 x2 x3\n1  1  6 11\n2  2  7 12\n3  3  8 13\n4  4  9 14\n5  5 10 15\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### filter() 함수 subset과 비슷\n\n# 조건 걸기\nworld10  <-  filter(world, lifeExp > 82)\nworld10\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 9 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -24.32618 ymin: -43.6346 xmax: 153.5695 ymax: 69.10625\nGeodetic CRS:  WGS 84\n# A tibble: 9 × 11\n  iso_a2 name_long  conti…¹ regio…² subre…³ type  area_…⁴    pop lifeExp gdpPe…⁵\n* <chr>  <chr>      <chr>   <chr>   <chr>   <chr>   <dbl>  <dbl>   <dbl>   <dbl>\n1 IL     Israel     Asia    Asia    Wester… Coun…  2.30e4 8.22e6    82.2  31702.\n2 SE     Sweden     Europe  Europe  Northe… Sove…  4.51e5 9.70e6    82.3  44168.\n3 CH     Switzerla… Europe  Europe  Wester… Sove…  4.62e4 8.19e6    83.2  57218.\n4 LU     Luxembourg Europe  Europe  Wester… Sove…  2.42e3 5.56e5    82.2  93655.\n5 ES     Spain      Europe  Europe  Southe… Sove…  5.02e5 4.65e7    83.2  31195.\n6 AU     Australia  Oceania Oceania Austra… Coun…  7.69e6 2.35e7    82.3  43547.\n7 IT     Italy      Europe  Europe  Southe… Sove…  3.15e5 6.08e7    83.1  33946.\n8 IS     Iceland    Europe  Europe  Northe… Sove…  1.08e5 3.27e5    82.9  41701.\n9 JP     Japan      Asia    Asia    Easter… Sove…  4.05e5 1.27e8    83.6  37337.\n# … with 1 more variable: geom <MULTIPOLYGON [°]>, and abbreviated variable\n#   names ¹​continent, ²​region_un, ³​subregion, ⁴​area_km2, ⁵​gdpPercap\n```\n:::\n\n```{.r .cell-code}\n### 체인(%>%) 활용, 가독성 좋음\n\nworld11 <-  world %>%\n  filter(continent == \"Asia\") %>%\n  select(name_long, continent) %>%\n  slice(1:5)\nworld11\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 5 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 34.26543 ymin: -10.35999 xmax: 141.0339 ymax: 55.38525\nGeodetic CRS:  WGS 84\n# A tibble: 5 × 3\n  name_long   continent                                                     geom\n  <chr>       <chr>                                           <MULTIPOLYGON [°]>\n1 Kazakhstan  Asia      (((87.35997 49.21498, 86.82936 49.82667, 85.54127 49.69…\n2 Uzbekistan  Asia      (((55.96819 41.30864, 57.09639 41.32231, 56.93222 41.82…\n3 Indonesia   Asia      (((104.37 -1.084843, 104.0108 -1.059212, 103.4376 -0.71…\n4 Timor-Leste Asia      (((124.9687 -8.89279, 125.07 -9.089987, 125.0885 -9.393…\n5 Israel      Asia      (((35.71992 32.70919, 35.7008 32.71601, 35.8364 32.8681…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### aggregate() 함수 사용해서 그룹별로 집계\n\n# x(속성정보:인구) ~ group(그룹:대륙), sum집계\nworld_agg1  <-  aggregate(pop ~ continent, FUN = sum, data = world, na.rm = TRUE)\n\nworld_agg1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      continent        pop\n1        Africa 1154946633\n2          Asia 4311408059\n3        Europe  669036256\n4 North America  565028684\n5       Oceania   37757833\n6 South America  412060811\n```\n:::\n\n```{.r .cell-code}\nstr(world_agg1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t6 obs. of  2 variables:\n $ continent: chr  \"Africa\" \"Asia\" \"Europe\" \"North America\" ...\n $ pop      : num  1.15e+09 4.31e+09 6.69e+08 5.65e+08 3.78e+07 ...\n```\n:::\n\n```{.r .cell-code}\nclass(world_agg1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"data.frame\"\n```\n:::\n\n```{.r .cell-code}\n### 2번째 방법\nworld_agg2  <-  aggregate(world[\"pop\"], by = list(world$continent),\n                       FUN = sum, na.rm = TRUE)\nworld_agg2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 8 features and 2 fields\nAttribute-geometry relationship: 0 constant, 1 aggregate, 1 identity\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n                  Group.1        pop                       geometry\n1                  Africa 1154946633 MULTIPOLYGON (((11.91496 -5...\n2              Antarctica          0 MULTIPOLYGON (((-61.13898 -...\n3                    Asia 4311408059 MULTIPOLYGON (((120.295 -10...\n4                  Europe  669036256 MULTIPOLYGON (((-53.77852 2...\n5           North America  565028684 MULTIPOLYGON (((-80.9473 8....\n6                 Oceania   37757833 MULTIPOLYGON (((171.9487 -4...\n7 Seven seas (open ocean)          0 POLYGON ((68.935 -48.625, 6...\n8           South America  412060811 MULTIPOLYGON (((-57.75 -51....\n```\n:::\n\n```{.r .cell-code}\nclass(world_agg2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sf\"         \"data.frame\"\n```\n:::\n\n```{.r .cell-code}\n# sf 객체는 집계 결과가 sf 객체로 반환\nworld['pop']\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 2\n         pop                                                                geom\n       <dbl>                                                  <MULTIPOLYGON [°]>\n 1    885806 (((-180 -16.55522, -179.9174 -16.50178, -179.7933 -16.02088, -180 …\n 2  52234869 (((33.90371 -0.95, 31.86617 -1.02736, 30.76986 -1.01455, 30.4191 -…\n 3        NA (((-8.66559 27.65643, -8.817828 27.65643, -8.794884 27.1207, -9.41…\n 4  35535348 (((-132.71 54.04001, -133.18 54.16998, -133.2397 53.85108, -133.05…\n 5 318622525 (((-171.7317 63.78252, -171.7911 63.40585, -171.5531 63.31779, -17…\n 6  17288285 (((87.35997 49.21498, 86.82936 49.82667, 85.54127 49.69286, 85.115…\n 7  30757700 (((55.96819 41.30864, 57.09639 41.32231, 56.93222 41.82603, 57.786…\n 8   7755785 (((141.0002 -2.600151, 141.0171 -5.859022, 141.0339 -9.117893, 142…\n 9 255131116 (((104.37 -1.084843, 104.0108 -1.059212, 103.4376 -0.7119459, 103.…\n10  42981515 (((-68.63401 -52.63637, -68.63335 -54.8695, -67.56244 -54.87001, -…\n# … with 167 more rows\n```\n:::\n\n```{.r .cell-code}\nclass(world['pop'])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n:::\n\n```{.r .cell-code}\n# 숫자형 벡터는 aggregate 적용하면 d.f로 반환\nworld$pop %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]    885806  52234869        NA  35535348 318622525  17288285\n```\n:::\n\n```{.r .cell-code}\nclass(world$pop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### group_by + summarize : aggregate보다 가독성 좋음\n\n# 대륙별 인구의 합계\nworld_agg3  <-  world %>%\n  group_by(continent) %>%\n  summarize(pop = sum(pop, na.rm = TRUE))\nworld_agg3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 8 features and 2 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 8 × 3\n  continent                      pop                                        geom\n  <chr>                        <dbl>                              <GEOMETRY [°]>\n1 Africa                  1154946633 MULTIPOLYGON (((36.86623 22, 36.69069 22.2…\n2 Antarctica                       0 MULTIPOLYGON (((-180 -89.9, 180 -89.9, 180…\n3 Asia                    4311408059 MULTIPOLYGON (((36.14976 35.82153, 35.9050…\n4 Europe                   669036256 MULTIPOLYGON (((26.29 35.29999, 25.74502 3…\n5 North America            565028684 MULTIPOLYGON (((-82.26815 23.18861, -82.51…\n6 Oceania                   37757833 MULTIPOLYGON (((166.7932 -15.66881, 167.00…\n7 Seven seas (open ocean)          0 POLYGON ((68.935 -48.625, 68.8675 -48.83, …\n8 South America            412060811 MULTIPOLYGON (((-66.95992 -54.89681, -66.4…\n```\n:::\n\n```{.r .cell-code}\n# 대륙별 인구의 합계 + 대륙별 국가 수\nworld_agg4  <-  world %>%\n  group_by(continent) %>%\n  summarize(pop = sum(pop, na.rm = TRUE), n_countries = n())\nworld_agg4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 8 features and 3 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 8 × 4\n  continent                      pop n_countries                            geom\n  <chr>                        <dbl>       <int>                  <GEOMETRY [°]>\n1 Africa                  1154946633          51 MULTIPOLYGON (((36.86623 22, 3…\n2 Antarctica                       0           1 MULTIPOLYGON (((-180 -89.9, 18…\n3 Asia                    4311408059          47 MULTIPOLYGON (((36.14976 35.82…\n4 Europe                   669036256          39 MULTIPOLYGON (((26.29 35.29999…\n5 North America            565028684          18 MULTIPOLYGON (((-82.26815 23.1…\n6 Oceania                   37757833           7 MULTIPOLYGON (((166.7932 -15.6…\n7 Seven seas (open ocean)          0           1 POLYGON ((68.935 -48.625, 68.8…\n8 South America            412060811          13 MULTIPOLYGON (((-66.95992 -54.…\n```\n:::\n\n```{.r .cell-code}\n# 대륙별 인구의 합계 + 대륙별 국가 수 + 인구 탑3 대륙 + 인구 내림차순\nworld %>% \n  select(pop, continent) %>% \n  group_by(continent) %>% \n  summarize(pop = sum(pop, na.rm = TRUE), n_countries = n()) %>% \n  top_n(n = 3, wt = pop) %>%\n  arrange(desc(pop)) %>%\n  st_drop_geometry() # geom 컬럼 제거\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  continent        pop n_countries\n* <chr>          <dbl>       <int>\n1 Asia      4311408059          47\n2 Africa    1154946633          51\n3 Europe     669036256          39\n```\n:::\n:::\n\n\n## data.table로 벡터 데이터의 속성정보 그룹별 집계\n- data.table 데이터 구조를 조작, 관리, 처리할 때 사용. 간결성\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"data.table\")\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'data.table'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:raster':\n\n    shift\n```\n:::\n\n```{.r .cell-code}\nworld_dt <-  data.table(world)\nworld_dt\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     iso_a2           name_long     continent region_un        subregion\n  1:     FJ                Fiji       Oceania   Oceania        Melanesia\n  2:     TZ            Tanzania        Africa    Africa   Eastern Africa\n  3:     EH      Western Sahara        Africa    Africa  Northern Africa\n  4:     CA              Canada North America  Americas Northern America\n  5:     US       United States North America  Americas Northern America\n ---                                                                    \n173:     RS              Serbia        Europe    Europe  Southern Europe\n174:     ME          Montenegro        Europe    Europe  Southern Europe\n175:     XK              Kosovo        Europe    Europe  Southern Europe\n176:     TT Trinidad and Tobago North America  Americas        Caribbean\n177:     SS         South Sudan        Africa    Africa   Eastern Africa\n                  type    area_km2       pop  lifeExp gdpPercap     geom\n  1: Sovereign country    19289.97    885806 69.96000  8222.254  <XY[3]>\n  2: Sovereign country   932745.79  52234869 64.16300  2402.099  <XY[1]>\n  3:     Indeterminate    96270.60        NA       NA        NA  <XY[1]>\n  4: Sovereign country 10036042.98  35535348 81.95305 43079.143 <XY[30]>\n  5:           Country  9510743.74 318622525 78.84146 51921.985 <XY[10]>\n ---                                                                    \n173: Sovereign country    76388.61   7130576 75.33659 13112.909  <XY[1]>\n174: Sovereign country    13443.68    621810 76.71200 14796.635  <XY[1]>\n175: Sovereign country    11230.26   1821800 71.09756  8698.292  <XY[1]>\n176: Sovereign country     7737.81   1354493 70.42600 31181.821  <XY[1]>\n177: Sovereign country   624909.10  11530971 55.81700  1935.879  <XY[1]>\n```\n:::\n\n```{.r .cell-code}\n# 간결하게 top3 대륙 추출\nworld_dt[, .(pop = sum(pop, na.rm = TRUE), n = .N), by = list(continent)][order(-pop)][1:3] \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   continent        pop  n\n1:      Asia 4311408059 47\n2:    Africa 1154946633 51\n3:    Europe  669036256 39\n```\n:::\n:::\n\n\n## 두개의 지리 벡터 데이터 테이블 `join` 하기\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### name_long 컬럼 기준으로 join\nworld_coffee <-  left_join(world, coffee_data) # by='name_long'\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(name_long)`\n```\n:::\n\n```{.r .cell-code}\nworld_coffee\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 13\n   iso_a2 name_l…¹ conti…² regio…³ subre…⁴ type  area_…⁵     pop lifeExp gdpPe…⁶\n   <chr>  <chr>    <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 FJ     Fiji     Oceania Oceania Melane… Sove…  1.93e4  8.86e5    70.0   8222.\n 2 TZ     Tanzania Africa  Africa  Easter… Sove…  9.33e5  5.22e7    64.2   2402.\n 3 EH     Western… Africa  Africa  Northe… Inde…  9.63e4 NA         NA       NA \n 4 CA     Canada   North … Americ… Northe… Sove…  1.00e7  3.55e7    82.0  43079.\n 5 US     United … North … Americ… Northe… Coun…  9.51e6  3.19e8    78.8  51922.\n 6 KZ     Kazakhs… Asia    Asia    Centra… Sove…  2.73e6  1.73e7    71.6  23587.\n 7 UZ     Uzbekis… Asia    Asia    Centra… Sove…  4.61e5  3.08e7    71.0   5371.\n 8 PG     Papua N… Oceania Oceania Melane… Sove…  4.65e5  7.76e6    65.2   3709.\n 9 ID     Indones… Asia    Asia    South-… Sove…  1.82e6  2.55e8    68.9  10003.\n10 AR     Argenti… South … Americ… South … Sove…  2.78e6  4.30e7    76.3  18798.\n# … with 167 more rows, 3 more variables: geom <MULTIPOLYGON [°]>,\n#   coffee_production_2016 <int>, coffee_production_2017 <int>, and abbreviated\n#   variable names ¹​name_long, ²​continent, ³​region_un, ⁴​subregion, ⁵​area_km2,\n#   ⁶​gdpPercap\n```\n:::\n\n```{.r .cell-code}\nclass(world_coffee)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n:::\n\n```{.r .cell-code}\nnames(world_coffee)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"iso_a2\"                 \"name_long\"              \"continent\"             \n [4] \"region_un\"              \"subregion\"              \"type\"                  \n [7] \"area_km2\"               \"pop\"                    \"lifeExp\"               \n[10] \"gdpPercap\"              \"geom\"                   \"coffee_production_2016\"\n[13] \"coffee_production_2017\"\n```\n:::\n\n```{.r .cell-code}\nplot(world_coffee[\"coffee_production_2017\"])\n```\n\n::: {.cell-output-display}\n![](공간정보분석-CH3_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n### 두 데이터 셋에 같은 이름의 컬럼이 없는 경우\n# coffee_data의 name_long변수 이름을 nm으로 변경\ncoffee_renamed  <-  rename(coffee_data, nm = name_long)\n\n# by 사용하여 결합 변수를 지정하여 다른이름변수를 기준으로 조인하기\nworld_coffee2 <- left_join(world, coffee_renamed, by = c(name_long = \"nm\"))\n\nworld_coffee2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 13\n   iso_a2 name_l…¹ conti…² regio…³ subre…⁴ type  area_…⁵     pop lifeExp gdpPe…⁶\n   <chr>  <chr>    <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 FJ     Fiji     Oceania Oceania Melane… Sove…  1.93e4  8.86e5    70.0   8222.\n 2 TZ     Tanzania Africa  Africa  Easter… Sove…  9.33e5  5.22e7    64.2   2402.\n 3 EH     Western… Africa  Africa  Northe… Inde…  9.63e4 NA         NA       NA \n 4 CA     Canada   North … Americ… Northe… Sove…  1.00e7  3.55e7    82.0  43079.\n 5 US     United … North … Americ… Northe… Coun…  9.51e6  3.19e8    78.8  51922.\n 6 KZ     Kazakhs… Asia    Asia    Centra… Sove…  2.73e6  1.73e7    71.6  23587.\n 7 UZ     Uzbekis… Asia    Asia    Centra… Sove…  4.61e5  3.08e7    71.0   5371.\n 8 PG     Papua N… Oceania Oceania Melane… Sove…  4.65e5  7.76e6    65.2   3709.\n 9 ID     Indones… Asia    Asia    South-… Sove…  1.82e6  2.55e8    68.9  10003.\n10 AR     Argenti… South … Americ… South … Sove…  2.78e6  4.30e7    76.3  18798.\n# … with 167 more rows, 3 more variables: geom <MULTIPOLYGON [°]>,\n#   coffee_production_2016 <int>, coffee_production_2017 <int>, and abbreviated\n#   variable names ¹​name_long, ²​continent, ³​region_un, ⁴​subregion, ⁵​area_km2,\n#   ⁶​gdpPercap\n```\n:::\n\n```{.r .cell-code}\n### inner_join (left_join과 다른점 : 공통된 값이 있는 행만 살림)\nworld_coffee_inner <- inner_join(world, coffee_data)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(name_long)`\n```\n:::\n\n```{.r .cell-code}\nworld_coffee_inner\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 45 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -117.1278 ymin: -33.76838 xmax: 156.02 ymax: 35.49401\nGeodetic CRS:  WGS 84\n# A tibble: 45 × 13\n   iso_a2 name_long conti…¹ regio…² subre…³ type  area_…⁴    pop lifeExp gdpPe…⁵\n   <chr>  <chr>     <chr>   <chr>   <chr>   <chr>   <dbl>  <dbl>   <dbl>   <dbl>\n 1 TZ     Tanzania  Africa  Africa  Easter… Sove…  9.33e5 5.22e7    64.2   2402.\n 2 PG     Papua Ne… Oceania Oceania Melane… Sove…  4.65e5 7.76e6    65.2   3709.\n 3 ID     Indonesia Asia    Asia    South-… Sove…  1.82e6 2.55e8    68.9  10003.\n 4 KE     Kenya     Africa  Africa  Easter… Sove…  5.91e5 4.60e7    66.2   2753.\n 5 DO     Dominica… North … Americ… Caribb… Sove…  4.82e4 1.04e7    73.5  12663.\n 6 TL     Timor-Le… Asia    Asia    South-… Sove…  1.47e4 1.21e6    68.3   6263.\n 7 MX     Mexico    North … Americ… Centra… Sove…  1.97e6 1.24e8    76.8  16623.\n 8 BR     Brazil    South … Americ… South … Sove…  8.51e6 2.04e8    75.0  15374.\n 9 BO     Bolivia   South … Americ… South … Sove…  1.09e6 1.06e7    68.4   6325.\n10 PE     Peru      South … Americ… South … Sove…  1.31e6 3.10e7    74.5  11548.\n# … with 35 more rows, 3 more variables: geom <MULTIPOLYGON [°]>,\n#   coffee_production_2016 <int>, coffee_production_2017 <int>, and abbreviated\n#   variable names ¹​continent, ²​region_un, ³​subregion, ⁴​area_km2, ⁵​gdpPercap\n```\n:::\n\n```{.r .cell-code}\n### 비교\ndim(world_coffee_inner)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 45 13\n```\n:::\n\n```{.r .cell-code}\ndim(world_coffee)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 177  13\n```\n:::\n\n```{.r .cell-code}\nnrow(coffee_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 47\n```\n:::\n\n```{.r .cell-code}\n### setdiff(x,y) : x에서 y에는 없는 데이터 추출\nsetdiff(coffee_data$name_long, world$name_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Congo, Dem. Rep. of\" \"Others\"             \n```\n:::\n\n```{.r .cell-code}\n### 문자열 추출 (Dem으로 시작, Congo로 끝나는 단어 추출)\nstr_subset(world$name_long, 'Dem*.+Congo')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Democratic Republic of the Congo\"\n```\n:::\n\n```{.r .cell-code}\n### grepl : 문자열에서 특정 문자열 지정\n# 이름 동일하게 변경\ncoffee_data$name_long[grepl(\"Congo,\", coffee_data$name_long)]  <-  \n  str_subset(world$name_long, \"Dem*.+Congo\")\n\nstr_subset(coffee_data$name_long, 'Dem*.+Congo')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Democratic Republic of the Congo\"\n```\n:::\n\n```{.r .cell-code}\n# 46개의 국가 모두 반환\nworld_coffee_match <- inner_join(world, coffee_data)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(name_long)`\n```\n:::\n\n```{.r .cell-code}\ndim(world_coffee_match)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46 13\n```\n:::\n\n```{.r .cell-code}\n### left_join(x,y) : x기준으로 y 병합\ncoffee_world = left_join(world, coffee_data)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(name_long)`\n```\n:::\n\n```{.r .cell-code}\ndim(coffee_world)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 177  13\n```\n:::\n\n```{.r .cell-code}\ncoffee_world2 = left_join(coffee_data, world)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(name_long)`\n```\n:::\n\n```{.r .cell-code}\ndim(coffee_world2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 47 13\n```\n:::\n:::\n\n\n\n## 지리 벡터 데이터의 새로운 속성 만들기/지리정보 제거하기\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### 원본 데이터 덮어쓰기 방지\nworld_new <- world\n\n### 새로운 속성 pop_dens 생성 (Km2 면적당 인구밀도)\nworld_new$pop_dens <- world_new$pop / world_new$area_km2\n\n### 속성값으로 보기 vs 지도상으로 보기(geom 정보가 있기때문)\nplot(world_new$pop_dens)\n```\n\n::: {.cell-output-display}\n![](공간정보분석-CH3_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(world_new['pop_dens'])\n```\n\n::: {.cell-output-display}\n![](공간정보분석-CH3_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n\n```{.r .cell-code}\n### dplyr로 새로운 속성 만들기\n# mutate\nworld_new <- world_new %>% mutate(pop_dens2 = pop / area_km2)\n\n# transmute : 기존 열 모두 제거, 새로 만든 열 + geom 열만 반환\nworld_new <- world %>% transmute(pop_dens3 = pop/area_km2)\n\nworld_new %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -18.28799 xmax: 180 ymax: 83.23324\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 2\n  pop_dens3                                                                 geom\n      <dbl>                                                   <MULTIPOLYGON [°]>\n1     45.9  (((-180 -16.55522, -179.9174 -16.50178, -179.7933 -16.02088, -180 -…\n2     56.0  (((33.90371 -0.95, 31.86617 -1.02736, 30.76986 -1.01455, 30.4191 -1…\n3     NA    (((-8.66559 27.65643, -8.817828 27.65643, -8.794884 27.1207, -9.413…\n4      3.54 (((-132.71 54.04001, -133.18 54.16998, -133.2397 53.85108, -133.054…\n5     33.5  (((-171.7317 63.78252, -171.7911 63.40585, -171.5531 63.31779, -170…\n6      6.33 (((87.35997 49.21498, 86.82936 49.82667, 85.54127 49.69286, 85.1155…\n```\n:::\n\n```{.r .cell-code}\n### tidyr로 기존 속성 합치거나 분리하기\n\n### unite()\n# con_reg : continent + region_un 합치고 ':' 로 분리, 합쳐진 열들 remove\nworld_unite <-  world %>%\n  unite(\"con_reg\", continent:region_un, sep = \":\", remove = TRUE)\n\nworld_unite\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 10\n   iso_a2 name_long        con_reg subre…¹ type  area_…²     pop lifeExp gdpPe…³\n   <chr>  <chr>            <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 FJ     Fiji             Oceani… Melane… Sove…  1.93e4  8.86e5    70.0   8222.\n 2 TZ     Tanzania         Africa… Easter… Sove…  9.33e5  5.22e7    64.2   2402.\n 3 EH     Western Sahara   Africa… Northe… Inde…  9.63e4 NA         NA       NA \n 4 CA     Canada           North … Northe… Sove…  1.00e7  3.55e7    82.0  43079.\n 5 US     United States    North … Northe… Coun…  9.51e6  3.19e8    78.8  51922.\n 6 KZ     Kazakhstan       Asia:A… Centra… Sove…  2.73e6  1.73e7    71.6  23587.\n 7 UZ     Uzbekistan       Asia:A… Centra… Sove…  4.61e5  3.08e7    71.0   5371.\n 8 PG     Papua New Guinea Oceani… Melane… Sove…  4.65e5  7.76e6    65.2   3709.\n 9 ID     Indonesia        Asia:A… South-… Sove…  1.82e6  2.55e8    68.9  10003.\n10 AR     Argentina        South … South … Sove…  2.78e6  4.30e7    76.3  18798.\n# … with 167 more rows, 1 more variable: geom <MULTIPOLYGON [°]>, and\n#   abbreviated variable names ¹​subregion, ²​area_km2, ³​gdpPercap\n```\n:::\n\n```{.r .cell-code}\n# 합쳐진 열들 제거X\nworld_unite2 <-  world %>%\n  unite(\"con_reg\", continent:region_un, sep = \":\", remove = FALSE)\n\nworld_unite2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 11 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 12\n   iso_a2 name_l…¹ con_reg conti…² regio…³ subre…⁴ type  area_…⁵     pop lifeExp\n   <chr>  <chr>    <chr>   <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>\n 1 FJ     Fiji     Oceani… Oceania Oceania Melane… Sove…  1.93e4  8.86e5    70.0\n 2 TZ     Tanzania Africa… Africa  Africa  Easter… Sove…  9.33e5  5.22e7    64.2\n 3 EH     Western… Africa… Africa  Africa  Northe… Inde…  9.63e4 NA         NA  \n 4 CA     Canada   North … North … Americ… Northe… Sove…  1.00e7  3.55e7    82.0\n 5 US     United … North … North … Americ… Northe… Coun…  9.51e6  3.19e8    78.8\n 6 KZ     Kazakhs… Asia:A… Asia    Asia    Centra… Sove…  2.73e6  1.73e7    71.6\n 7 UZ     Uzbekis… Asia:A… Asia    Asia    Centra… Sove…  4.61e5  3.08e7    71.0\n 8 PG     Papua N… Oceani… Oceania Oceania Melane… Sove…  4.65e5  7.76e6    65.2\n 9 ID     Indones… Asia:A… Asia    Asia    South-… Sove…  1.82e6  2.55e8    68.9\n10 AR     Argenti… South … South … Americ… South … Sove…  2.78e6  4.30e7    76.3\n# … with 167 more rows, 2 more variables: gdpPercap <dbl>,\n#   geom <MULTIPOLYGON [°]>, and abbreviated variable names ¹​name_long,\n#   ²​continent, ³​region_un, ⁴​subregion, ⁵​area_km2\n```\n:::\n\n```{.r .cell-code}\n### separate()\n# con_reg를 continent, region_un로 분리\nworld_separate <-  world_unite %>% \n  separate(con_reg, c(\"continent\", \"region_un\"), sep = ':')\n\nworld_separate\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 11\n   iso_a2 name_l…¹ conti…² regio…³ subre…⁴ type  area_…⁵     pop lifeExp gdpPe…⁶\n   <chr>  <chr>    <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 FJ     Fiji     Oceania Oceania Melane… Sove…  1.93e4  8.86e5    70.0   8222.\n 2 TZ     Tanzania Africa  Africa  Easter… Sove…  9.33e5  5.22e7    64.2   2402.\n 3 EH     Western… Africa  Africa  Northe… Inde…  9.63e4 NA         NA       NA \n 4 CA     Canada   North … Americ… Northe… Sove…  1.00e7  3.55e7    82.0  43079.\n 5 US     United … North … Americ… Northe… Coun…  9.51e6  3.19e8    78.8  51922.\n 6 KZ     Kazakhs… Asia    Asia    Centra… Sove…  2.73e6  1.73e7    71.6  23587.\n 7 UZ     Uzbekis… Asia    Asia    Centra… Sove…  4.61e5  3.08e7    71.0   5371.\n 8 PG     Papua N… Oceania Oceania Melane… Sove…  4.65e5  7.76e6    65.2   3709.\n 9 ID     Indones… Asia    Asia    South-… Sove…  1.82e6  2.55e8    68.9  10003.\n10 AR     Argenti… South … Americ… South … Sove…  2.78e6  4.30e7    76.3  18798.\n# … with 167 more rows, 1 more variable: geom <MULTIPOLYGON [°]>, and\n#   abbreviated variable names ¹​name_long, ²​continent, ³​region_un, ⁴​subregion,\n#   ⁵​area_km2, ⁶​gdpPercap\n```\n:::\n\n```{.r .cell-code}\n### 데이터 속성 이름 바꾸기\n# rename(x:new = y:old)\nworld %>% rename(name = name_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 11\n   iso_a2 name     conti…¹ regio…² subre…³ type  area_…⁴     pop lifeExp gdpPe…⁵\n   <chr>  <chr>    <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 FJ     Fiji     Oceania Oceania Melane… Sove…  1.93e4  8.86e5    70.0   8222.\n 2 TZ     Tanzania Africa  Africa  Easter… Sove…  9.33e5  5.22e7    64.2   2402.\n 3 EH     Western… Africa  Africa  Northe… Inde…  9.63e4 NA         NA       NA \n 4 CA     Canada   North … Americ… Northe… Sove…  1.00e7  3.55e7    82.0  43079.\n 5 US     United … North … Americ… Northe… Coun…  9.51e6  3.19e8    78.8  51922.\n 6 KZ     Kazakhs… Asia    Asia    Centra… Sove…  2.73e6  1.73e7    71.6  23587.\n 7 UZ     Uzbekis… Asia    Asia    Centra… Sove…  4.61e5  3.08e7    71.0   5371.\n 8 PG     Papua N… Oceania Oceania Melane… Sove…  4.65e5  7.76e6    65.2   3709.\n 9 ID     Indones… Asia    Asia    South-… Sove…  1.82e6  2.55e8    68.9  10003.\n10 AR     Argenti… South … Americ… South … Sove…  2.78e6  4.30e7    76.3  18798.\n# … with 167 more rows, 1 more variable: geom <MULTIPOLYGON [°]>, and\n#   abbreviated variable names ¹​continent, ²​region_un, ³​subregion, ⁴​area_km2,\n#   ⁵​gdpPercap\n```\n:::\n\n```{.r .cell-code}\nworld\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 11\n   iso_a2 name_l…¹ conti…² regio…³ subre…⁴ type  area_…⁵     pop lifeExp gdpPe…⁶\n * <chr>  <chr>    <chr>   <chr>   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 FJ     Fiji     Oceania Oceania Melane… Sove…  1.93e4  8.86e5    70.0   8222.\n 2 TZ     Tanzania Africa  Africa  Easter… Sove…  9.33e5  5.22e7    64.2   2402.\n 3 EH     Western… Africa  Africa  Northe… Inde…  9.63e4 NA         NA       NA \n 4 CA     Canada   North … Americ… Northe… Sove…  1.00e7  3.55e7    82.0  43079.\n 5 US     United … North … Americ… Northe… Coun…  9.51e6  3.19e8    78.8  51922.\n 6 KZ     Kazakhs… Asia    Asia    Centra… Sove…  2.73e6  1.73e7    71.6  23587.\n 7 UZ     Uzbekis… Asia    Asia    Centra… Sove…  4.61e5  3.08e7    71.0   5371.\n 8 PG     Papua N… Oceania Oceania Melane… Sove…  4.65e5  7.76e6    65.2   3709.\n 9 ID     Indones… Asia    Asia    South-… Sove…  1.82e6  2.55e8    68.9  10003.\n10 AR     Argenti… South … Americ… South … Sove…  2.78e6  4.30e7    76.3  18798.\n# … with 167 more rows, 1 more variable: geom <MULTIPOLYGON [°]>, and\n#   abbreviated variable names ¹​name_long, ²​continent, ³​region_un, ⁴​subregion,\n#   ⁵​area_km2, ⁶​gdpPercap\n```\n:::\n\n```{.r .cell-code}\n# 여러개의 이름 변경\nnew_names <- c(\"i\", \"n\", \"c\", \"r\", \"s\", \"t\", \"a\", \"p\", \"l\", \"gP\", \"geom\")\nworld %>% setNames(new_names)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 177 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\n# A tibble: 177 × 11\n   i     n                c        r     s     t          a       p     l     gP\n * <chr> <chr>            <chr>    <chr> <chr> <chr>  <dbl>   <dbl> <dbl>  <dbl>\n 1 FJ    Fiji             Oceania  Ocea… Mela… Sove… 1.93e4  8.86e5  70.0  8222.\n 2 TZ    Tanzania         Africa   Afri… East… Sove… 9.33e5  5.22e7  64.2  2402.\n 3 EH    Western Sahara   Africa   Afri… Nort… Inde… 9.63e4 NA       NA      NA \n 4 CA    Canada           North A… Amer… Nort… Sove… 1.00e7  3.55e7  82.0 43079.\n 5 US    United States    North A… Amer… Nort… Coun… 9.51e6  3.19e8  78.8 51922.\n 6 KZ    Kazakhstan       Asia     Asia  Cent… Sove… 2.73e6  1.73e7  71.6 23587.\n 7 UZ    Uzbekistan       Asia     Asia  Cent… Sove… 4.61e5  3.08e7  71.0  5371.\n 8 PG    Papua New Guinea Oceania  Ocea… Mela… Sove… 4.65e5  7.76e6  65.2  3709.\n 9 ID    Indonesia        Asia     Asia  Sout… Sove… 1.82e6  2.55e8  68.9 10003.\n10 AR    Argentina        South A… Amer… Sout… Sove… 2.78e6  4.30e7  76.3 18798.\n# … with 167 more rows, and 1 more variable: geom <MULTIPOLYGON [°]>\n```\n:::\n:::\n\n\n## 래스터 객체 조작\n- numeric, integer, logical, factor 데이처 유형 지원 (character지원X)\n- 문자형으로 래스터 객체 만들기 : 요인형 or 논리형으로 변환 필요\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### raster 패키지를 이용한 integer 속성의 래스터객체\nelev <- raster(nrows = 6,  \n               ncols = 6,  \n               xmn = -1.5, \n               xmx = 1.5, \n               ymn = -1.5,  \n               ymx = 1.5, \n               vals = 1:36) \n\nelev\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass      : RasterLayer \ndimensions : 6, 6, 36  (nrow, ncol, ncell)\nresolution : 0.5, 0.5  (x, y)\nextent     : -1.5, 1.5, -1.5, 1.5  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nsource     : memory\nnames      : layer \nvalues     : 1, 36  (min, max)\n```\n:::\n\n```{.r .cell-code}\nplot(elev, main = 'raster datasets with numeric valeus')\n```\n\n::: {.cell-output-display}\n![](공간정보분석-CH3_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\n### 모래 굵기 수준 래스터객체 만들기\ngrain_order <- c(\"clay\", \"silt\", \"sand\")                      # 모래 이름\ngrain_char <- sample(grain_order, 36, replace = TRUE)         # 개수지정(중복허용)\ngrain_fact <- factor(grain_char, levels = grain_order)        # 팩터 변환\ngrain <- raster(nrows = 6, ncols = 6, res = 0.5, \n               xmn = -1.5, xmx = 1.5, ymn = -1.5, ymx = 1.5,\n               vals = grain_fact)\n\nplot(grain)\n```\n\n::: {.cell-output-display}\n![](공간정보분석-CH3_files/figure-html/unnamed-chunk-15-2.png){width=672}\n:::\n\n```{.r .cell-code}\n###새로운 facter levels 추가\nlevels(grain)[[1]] <- cbind(levels(grain)[[1]], wetness = c(\"wet\", \"moist\", \"dry\"))\nlevels(grain)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n  ID VALUE wetness\n1  1  clay     wet\n2  2  silt   moist\n3  3  sand     dry\n```\n:::\n\n```{.r .cell-code}\ngrain[c(1, 11, 35)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 1 1\n```\n:::\n\n```{.r .cell-code}\nfactorValues(grain, grain[c(1, 11, 35)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  VALUE wetness\n1  clay     wet\n2  clay     wet\n3  clay     wet\n```\n:::\n:::\n\n\n\n## 래스터 부분 설정\n- R에서 래스터 부분 설정 4가지\n  - 행,열 인덱싱\n  - 셀 ID\n  - 좌표\n  - 다른 공간 객체\n  \n- 래스터 객체 elev의 왼쪽상단( the top left pixel) 의 값을 출력\n- 모든 값을 추출하거나 전체 행을 추출하려면 values, getValues를 사용\n\n::: {.cell}\n\n```{.r .cell-code}\n### row 1, column 1\nelev[1, 1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\n### cell ID 1\nelev[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n:::\n",
    "supporting": [
      "공간정보분석-CH3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}