{
  "hash": "8ffe10a21dc48baec77eb63548767da6",
  "result": {
    "markdown": "---\ntitle: \"Data_Visualize CH3\"\nauthor: \"Seongtaek\"\ndate: \"2023-04-04\"\ncategories: [code, data_visualize, rstudio]\nimage: \"ggplot.jpg\"\ntoc: true\ntoc-depth: 3\nnumber-sections: true\n---\n\n\n<table align=\"bottom\">\n  <td>\n    <a target=\"_blank\" href=\"figure-3.2.html\"><img\n    src = r_logo.png />HTML파일로 보기</a>\n  </td>\n</table>\n\nFigure 3.2\n\n\n\n\n\n## 데이터 시각화 실습 : 그래프 합치기 Figure 3.2\n\n### 패키지 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n#> \n#> Attaching package: 'dplyr'\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\nlibrary(ggrepel)\nlibrary(cowplot) # plot_grid\n```\n:::\n\n\n### 데이터 불러오기, 파악\n- ncdc_normals.csv (날짜별 온도 등 데이터셋)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nncdc_normals <- read.csv('C:/Users/seong taek/Desktop/3-1 DataVisualize/data_visualize/ncdc_normals.csv')\n\n### 차원 파악\nncdc_normals %>% dim()\n#> [1] 2745366       6\n\n### 앞부분 훑어보기\nncdc_normals %>% head()\n#>    station_id month day temperature flag       date\n#> 1 AQW00061705     1   1        82.4    C 0000-01-01\n#> 2 AQW00061705     1   2        82.4    C 0000-01-02\n#> 3 AQW00061705     1   3        82.4    C 0000-01-03\n#> 4 AQW00061705     1   4        82.4    C 0000-01-04\n#> 5 AQW00061705     1   5        82.4    C 0000-01-05\n#> 6 AQW00061705     1   6        82.4    C 0000-01-06\n\n### 통계 요약 정보\nncdc_normals %>% summary()\n#>   station_id            month             day         temperature    \n#>  Length:2745366     Min.   : 1.000   Min.   : 1.00   Min.   :-21.80  \n#>  Class :character   1st Qu.: 4.000   1st Qu.: 8.00   1st Qu.: 39.70  \n#>  Mode  :character   Median : 7.000   Median :16.00   Median : 54.60  \n#>                     Mean   : 6.514   Mean   :15.76   Mean   : 53.17  \n#>                     3rd Qu.:10.000   3rd Qu.:23.00   3rd Qu.: 68.10  \n#>                     Max.   :12.000   Max.   :31.00   Max.   :103.20  \n#>      flag               date          \n#>  Length:2745366     Length:2745366    \n#>  Class :character   Class :character  \n#>  Mode  :character   Mode  :character  \n#>                                       \n#>                                       \n#> \n\n### 각 컬럼 클래스(타입) 확인\nncdc_normals %>% sapply(class)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"   \"numeric\" \"character\" \"character\"\n\n### 각 컬럼 자료형 확인\nncdc_normals %>% sapply(typeof)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"    \"double\" \"character\" \"character\"\n```\n:::\n\n### 전처리\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### staion id와 location 지정 선택한 d.f 만들기\nstation_loc <- data.frame(station_id = c(\"USW00014819\",\"USC00042319\",\"USW00093107\",\"USW00012918\"),\n                          location = c(\"Chicago\",\"Death Valley\",\"San Diego\",\"Houston\"))\n\nstation_loc %>% head()\n#>    station_id     location\n#> 1 USW00014819      Chicago\n#> 2 USC00042319 Death Valley\n#> 3 USW00093107    San Diego\n#> 4 USW00012918      Houston\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### station_id로 ncdc_normals와 station_loc 두 컬럼을 `inner_join`\ntemps_long <- ncdc_normals %>% inner_join(station_loc, by=\"station_id\")\ntemps_long %>% head()\n#>    station_id month day temperature flag       date     location\n#> 1 USC00042319     1   1        51.0    S 0000-01-01 Death Valley\n#> 2 USC00042319     1   2        51.2    S 0000-01-02 Death Valley\n#> 3 USC00042319     1   3        51.3    S 0000-01-03 Death Valley\n#> 4 USC00042319     1   4        51.4    S 0000-01-04 Death Valley\n#> 5 USC00042319     1   5        51.6    S 0000-01-05 Death Valley\n#> 6 USC00042319     1   6        51.7    S 0000-01-06 Death Valley\ntemps_long %>% sapply(class)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"   \"numeric\" \"character\" \"character\" \n#>    location \n#> \"character\"\n\n### temps_long의 `date`의 타입을 Cha → Date로 변환\ntemps_long$date <- temps_long$date %>% as.Date('%Y-%m-%d')\ntemps_long %>% sapply(class)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"   \"numeric\" \"character\"      \"Date\" \n#>    location \n#> \"character\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### Houston 필터 \ndata_Houston <- temps_long %>% filter(location=='Houston')\ndata_Houston %>% head()\n#>    station_id month day temperature flag       date location\n#> 1 USW00012918     1   1        53.9    S 0000-01-01  Houston\n#> 2 USW00012918     1   2        53.8    S 0000-01-02  Houston\n#> 3 USW00012918     1   3        53.8    S 0000-01-03  Houston\n#> 4 USW00012918     1   4        53.8    S 0000-01-04  Houston\n#> 5 USW00012918     1   5        53.8    S 0000-01-05  Houston\n#> 6 USW00012918     1   6        53.7    S 0000-01-06  Houston\ndata_Houston %>% tail()\n#>      station_id month day temperature flag       date location\n#> 361 USW00012918    12  26        54.2    C 0000-12-26  Houston\n#> 362 USW00012918    12  27        54.1    C 0000-12-27  Houston\n#> 363 USW00012918    12  28        54.1    C 0000-12-28  Houston\n#> 364 USW00012918    12  29        54.0    C 0000-12-29  Houston\n#> 365 USW00012918    12  30        53.9    C 0000-12-30  Houston\n#> 366 USW00012918    12  31        53.9    C 0000-12-31  Houston\n```\n:::\n\n\n### x축 눈금 설정\n\n::: {.cell}\n\n```{.r .cell-code}\ndate_s <- '0000-01-01' %>% as.Date('%Y-%m-%d')\ndate_e <- '0001-01-01' %>% as.Date('%Y-%m-%d')\nbreak_date <- seq(date_s, date_e, by = '3 month')\n```\n:::\n\n\n## ggplot + 축 설정\n- 사용 데이터셋 : data_Houston\n- x=date, y=temperature\n- scale_x_date\n  - 이름 : month\n  - 간격 : break_date (3개월)\n  - 간격 라벨 (Jan ~ Jan)\n- scale_y_continuous\n  - 이름 : temp\n- 테마 : 밝게\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp_plot <- ggplot(data_Houston, aes(x=date, y=temperature)) +\n  geom_line(linewidth=1, color='royalblue') +\n  scale_x_date(name= 'month',\n               breaks= break_date,\n               labels= c('Jan','Apr','Jul','Oct','Jan')) +\n  scale_y_continuous(name= 'temp') +\n  theme_light()\n\ntemp_plot\n```\n\n::: {.cell-output-display}\n![](figure-3.2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n### plot_grid\n- 여러 개의 그래프를 그리드로 결합하여 하나의 그래프로 만들어주는 함수\n\n::: {.cell}\n\n```{.r .cell-code}\n### 2개의 temp_long 그래프\nplot_ab <- plot_grid(temp_plot,\n                     temp_plot,\n                     nrow= 1,            # 행의 개수\n                     rel_widths= c(1,2), # 각각의 너비\n                     labels= c('a','b')) # 라벨 a,b\n\nplot_ab\n```\n\n::: {.cell-output-display}\n![](figure-3.2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n### plot_ab 그래프 + templong 그래프\nplot_abc <- plot_grid(plot_ab,\n                      temp_plot,\n                      ncol= 1,               # 열의 개수\n                      rel_heights= c(1.5, 1),# 각각의 높이\n                      labels= c('','c'))     # 라벨 '그대로', 'c'\n\nplot_abc\n```\n\n::: {.cell-output-display}\n![](figure-3.2_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "figure-3.2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}